%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (OHA) ()
%%Title: (glass7.eps)
%%CreationDate: 3/2/2009 10:15 PM
%%Canvassize: 16383
%%BoundingBox: 333 133 670 879
%%HiResBoundingBox: 333.625 133.4102 669.168 878.666
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 412.5 536.5 412.5 536.5
%AI3_TileBox: 129.0601 129.7598 695.9404 943.2397
%AI3_DocumentPreview: Header
%AI5_ArtSize: 825 927
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1139 1367 0.5 1557 890 26 0 0 78 117 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 60 128 8
%%BeginData: 7337 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD44FFA8A8A8FD39FFA87DFD3AFF7DA8A8FD38FFA8A8A8FD38FFA8
%7DA8A8A8FD37FFA87DFF7DFD38FF7DA8A87DFD38FF7DA8FF7DFD38FF7DFF
%A87DFD33FFA8FFFFFFA8A8FFA87DFD32FFA8527DFFFFA87DFF7D7DFD32FF
%7D527DFFFF7DFFFFA87DFD32FFA8FF7DA8FFA8A8FFA87DFD35FF7DFF7DFF
%FFFF7DFD35FFA8A8A8FFFFA87DFD35FFA8A8A8FFFFFF7DFD36FF7DA8FFFF
%A87DA8FD0BFFA87D527DA8FD25FFA8A8FFFFFF52FD0CFF7D27522752A8FD
%24FF7DA8FFFFFF7DA8FD0AFFA8525227522752A8FD23FFA8A8FFFFFF7DA8
%FD0AFFA8A87D525252277DFD23FF7DFD04FF7D7DFD0AFFA87DFF52282752
%27FD0DFFA8FD15FFA8A8FFFFFFA87EFD0AFFA8A8FFFF7D522752A8FD0CFF
%5227FD14FF7DFD04FFA87DFD07FFA8FFFFFF7DFFFFFFA85227FD0CFFA827
%2752FD13FFA8FD04FFA87DFD08FF7EFFFFA8A8FD04FF7DA8FD0BFF7D7D27
%52FD13FF7DFD05FF7DFD07FFA87DFFFFA8A8FD04FFA8FD0CFFA8A87DF8CB
%FD12FF7DA8FF7D7DA87DA8FD06FFA87DFFFFFF7DFD11FF7DA8FF52A8FD12
%FF52FFA8FD0452A8FD06FF7DA8FFFFFFA8A8FD10FFA87DFF7DA8FD12FFA8
%A8A8527D527D7DFD06FFA8A8FD04FFA8FD10FFA8A8FD08FFA8A8FD0BFF7D
%A8A8FD0552A8FD05FF7DA8FD04FFA8A8FD10FF7DFFFFFF7D527DFFFFFF7D
%FD04FFA852A8FD04FFA8A8FF527D5252527DFD05FFA87DFD05FF7DA8FD0F
%FFA8A8FFA827F8277DFFFFA8A8FFA87D27F852FD04FF7DA8A8FD055253A8
%FD04FFA852A8FD05FF7DA8FD0EFFA8A8FF7DF827F827A8FF7DA8FF7D2727
%F8A8FD05FFA8FF7D7D5253527D7DA8FD04FF52FD07FF52FD0FFF7DFF7D7D
%2727277DFFA8A8FF52522752FD05FFFD04A85252527D52A87DFFFFFFA852
%7DFD07FF52A8FD0DFF7D7DA8FF52F82752FFA8A8A827277D7DFD06FF7DA8
%FF7D7DFFFFA87D7EFD04FF527DFD08FF527DFD0DFF5252FFFF7DF852FFA8
%7DA82752FD07FFA8A87DFF7DFD04FFA852FD04FF7D52FD05FF7DA8A8FF52
%527DFD0BFF7DF87DFFFF5252FFA87D7D2752FD08FF7D7DFFFFA8FD04FF7D
%A8FFFFFF7D52FD04FF52522752A8FF7D27277D7DA8A8FD07FF524BA8FF7D
%A8FFA8527D27A8FD08FFA87DA8FFA8FD04FF7D7DFFFFFFA852FFFFFFA852
%275227277DFFA87DFD0527FD04527D7D52F827A87DA8FFA8525252A8FD08
%FFA8A87DFFA8FD05FF52FFFFFFA852A8FFFFA82752275227527DFFFFCB77
%52FD0D27A8FFA8277D52FD09FFA8A8A87DFFA8FD04FF7DA8FFFFFF52A8FF
%FF7D52275227522752A8FFFFFFA8A87D52FD0827F82752FF7D274B7DFD0A
%FFA8FF7EA8A8FD04FF7D7DFFFFFF7D7DFFFFA852524C525252277DFD05FF
%A8525227272752272727522727A87D27277DFD0AFF7DA8A87D7DA8FD04FF
%52FFFFFF7E52FFFF7D7D52522752275227A8FFFF5252FD062752527D7D4C
%272052272752FD0CFFA8FF7D7D7DFD04FF7D7DFFFFFF52A8FFA87DA82752
%27522752527D2727275227275277527D52FFA87D52272727527DFD0BFFA8
%A8A8FF537D7DFFFFFFA852A8FFFF7D53FFA852A87D27272752FD08277D7D
%27A852A8FFFF7D52202727277DFD0EFFA8FF52A87DFFFFFF7DA8FFFFA87D
%FFFF52FFFFFFA87D2752275227522752A8A827A8FF52FD04FF272727FF7D
%FD0DFFA8FFA8A8FF52A87DA8FFFF52FFFFFF52A8FF7D7DFFFF7D27522752
%27522727A8FF2752FFFF52FFA8FFFF52F827527DFD0DFFA8FFFFA8A8A852
%A87DA8FFA852FFFFA852FFFF7D7D522752275227522752A8FF5252FFFFFF
%A87DA8A8FF527D2727A8FD0EFFA8FFFFA8FD047D527D7D527DFFFF7D7DA8
%522727522727275227277DFF7D27A8FD07FFA87DA8A827FD10FFA8FFFFFF
%7DA8A87E537D5252A8A87D52285228522752527D52277DFFFF527DFD08FF
%A8A85227A8FD10FFA8FD04FF7D7DA8A87D7D525227272752275227537DA8
%522752FFFF7D52FD08FFA852A8F827A8FD10FFA8A8FD04FF7DA8A8FFA8A8
%A87D7DA85252A87DA8FF525227FFFFFF52FD09FF52A852277DFD12FFA8A8
%FFFFFFA87DFFFFFFA8FFA8A8FFFF52A8FF7D527D527DFFFF7D7DFD08FF4C
%277D2727FD14FFA8A8FFFFFFA8A8FD05FFA8A8FFFF52A87D527D52A8FFFF
%7DFD08FF5227525221CAFD15FF7D7DFFFFFF7DA8FD05FFA87DFFFFFD0452
%7DFFFFA8A8FD08FF52F827F87DFD17FFA87DFFFFFF7DA8FFA8FFFFFFA87D
%A87D52A827A8FFFFA8FD08FF7D2727F852FD19FFA87DA8FF7D4C527D52A8
%A8FFA852277D277D7D7DA8FD08FF7DF8272027A8FD1AFFA8777EA87DA2A8
%A8537DA8FF52FD047DFFA85252A8A8FFFFFFA87DFD0427A8FD1CFF7D5252
%7DA87DA8FFA87D5252FFA852A87DA87D7D27272752FD0627A8FD1EFF7D52
%52A8A87D7DA8FF5252FF7D7DFFFD04A8FFA852525227522752A8FD20FF52
%52285227277DA8277D7D52A2FD07FF52A8522727277DFD22FF52527DA852
%524C53FFFF52FD07FF7DA852522727A8FD23FFA827527DA8525252A8FF52
%527D525252A87D7D522727277DFD25FF7D2852275227FD0452A87DFFA87D
%2752524C272752FD26FFA852527D277D7DFD05527DA85227274B272727FD
%28FF7D52A8FFFFFF5252527D7D7D27522752522727FD2AFF287DFFFFFFA8
%5252527D52522752525227A8FD2AFFA852FD04FF7D5252274C52A8525227
%A8FD2BFFA852A8FFFFFF7DA8FFFFA8FF7D27277DFD2DFFA852A8FFFFFFA8
%FD04FF52527DFD2FFF524C52A87D7DFFFFFFA8277DA8FD2FFFA8277D7D27
%7DFFFFFF527D7DFD30FFA8527DFF7D7DA8FFA852527DFD31FF7D7DFFFF7D
%FFFFA8527DA8FD32FF52FFFFA8A8FF7D7D52FD33FFA8FFFF7DFFFFA8527D
%FD33FFA8FFFFA8A8FF7D7D52FD36FF7DFFFF7D52A8FD33FFA8FFFFA8A8FF
%7D527DFD34FFA8FFA8A8A87D52A8FD34FFA8FFA87DA87D52A8FD34FFA8FF
%A87D7DA852FD35FFA8A8FF27A87D52FD35FFA8FFFFA8FF7D52FD36FFA8FF
%FFFF527DFD35FFA8A8FFFFFF527DFD36FFA8FFFFFF52A8FD36FFA8FFFFFF
%52A8FD36FF7DFFFFFF52FD37FFA8FFFFA87DFD37FFA8FFFFA87DFD37FFA8
%A8FFA8A8FD37FFA8A8FFA87DFD38FFA8FFA8FD38FFA8A8FFA8A8FD38FFA8
%FFA8FD38FFA8A8FFA8A8FD38FFA8FFA8FD39FFA8A8FD3AFFA8FD3CFFA8FD
%3BFFA8FD3BFF7DFD3BFF7DA8FD3AFF7DFD3BFFA8FD3BFFA8FD3BFFA8FD3B
%FF7DFD3BFF7DFD3BFF27A8FD39FFA8527DFD39FFA8277DFD39FF525252FD
%38FFA85227277DFD37FF7D27522752A8FD35FFA8275227522752FD34FFA8
%525227524C7D277DA8FD2AFFA8A87D7D527D525227524C52275227522727
%2752277D7DA2A8A8A8FD1EFFA87D527D7D7D275252527DA87D52277DFFA8
%7DA85252272727FD04527D7DA8FD19FFA87D5252527D527D5252527DA8FF
%A8A827277DFFFFA87DA8A87D5252FD05275252527DFD16FFA85252A87D7D
%7DA8A2A8A8A87DFFA8A85252527DFFFFFFA852FFFFA87D5227272752524B
%272752FD14FFA85252FFA87D527DFD05A8FFA8A87D5252FF7DFFFFA87D52
%27FFFFFFA87D5227277D7DA2525252FD14FF527DFFA87DA87DA87DA8A8FF
%FFA2A87D527DFFFFFF7D7DA8525227A8FFFFFFA8272727527D7DA87DA8FD
%13FFA852FFFFFFA87D527DA8FFFF7DA87D7D7D52A8FFA8A8FFFF7D7DA827
%525252FD0427F827202752FD15FFA853A87DFFFFFFA8FD067DA25252277D
%7DA87D7D52FFFFFFA87D527D527D7D52272752FD17FFA87D7D7DA8A8FFA8
%52527D525227FD047DA85252527D7DFD05FFA8A87D7D27277DFD1AFFA8A8
%FD057DA852A8A852A8FD05FFA8A87DA8A8A87D7D5252275252A8FD21FFA8
%A8FD047DFD045227522752525227FD04527D7DA8A8FD0EFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
1 Bn
%AI5_BeginGradient: (Unnamed gradient 9)
(Unnamed gradient 9) 0 2 Bd
[
<
8586878888898A8B8C8B8C8D8E8F9090919293949495969797979898999A9B9B9C9D9D9E9F9FA0A1
A1A2A1A2A2A3A3A4A4A5A5A5A6A6A6A7A7A8A7A7A8A8A9A9AAAAABABABACACACADADAEACADADADAD
AEAEAEAFAFAFAFB0B0B0B1AFB0B0B0B1B1B1B2B2
>
<
6E6F7070717273747576777879797A7B7C7D7E7F7F8081828284858586878788898A8B8C8C8D8E8F
8F9091929293949495969394959596979798999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A3A3A4A4
A5A5A5A6A6A7A7A7A8A8A9AAAAAAABABABACACAC
>
<
69696A6B6B6C6D6E6E6F70707172737374757576777878797A7A7B7C7C7D7E7F7F80818182828384
8485868687878889898A8E8E8F8F909090919292939394949595969697979898999A9A9A9B9B9C9C
9D9D9D9E9E9E9F9FA0A0A0A0A1A1A1A2A2A2A3A3
>
<
1112131414161718191A1B1C1D1E1F20222324262728292B2C2D2F303233353638393B3C3E404143
4546484A4B4D4F50525457585A5C5E6062646567696B6D6F717375787A7C7E81838587898C8E9093
9597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBD
>
<
807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69696867666564636261605F5E5D5C5B
5A59595857565554535251504F4E4D4C4B4A4A494847464544434241403F3E3D3C3B3A3A39383736
3534333231302F2E2D2C2B2B2A29282726252423
>
<
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
59585756555453525150504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433
3231302F2E2D2C2B2A292827262524232221201F
>
<
84838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D
5C5B5A5958575655545351504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534
333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.521477 0.431769 0.410437 0.065675 0.501961 0.505882 0.517647 2 50 0 %_BS
%_0.521477 0.431769 0.410437 0.065675 0.501961 0.505882 0.517647 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Copper Radial)
(Copper Radial) 1 4 Bd
[
<
000001010201020203030404050505060607070707080809090A0A0B0B0C0B0D0C0D0D0F0E101011
1112121313141415151616171719191A1A1A1B1B1C1C1D1D1F1F2020212122222323242425252626
272729282A
>
<
0B0C0B0D0E0F0F101113121314151516171818191A1B1B1C1D1E1E1F202122212323252425262827
28292A2B2B2C2D2E2F2F30313332343536383739393B3C3C3D3E3F3F40424344444546474848494A
4B4C4C4D4E
>
<
22222425262527282A2A2C2D2E2E3031323334353637393A3A3B3D3C3D3E3E404142434445464748
494A4B4C4E4E4F50515354555658595A5B5C5E5F6061626364656668696A6B6B6D6E6F7071737475
7677797A7C
>
0.000031
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDEC
ECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9
D8D8D7D7D6
>
<
F1F0F0EFEEEDEDECEBEAEAE9E8E7E7E6E5E4E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D7D6D5D4D4
D3D2D1D0D0CFCECDCCCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8B7B6B6B5B4
B3B2B2B1B0
>
<
DBDAD9D8D7D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A89
>
4 %_Br
<
2A2B2A2C2D2D2E2F2F303132323334343536373738393A3A3B3B3B3C3D3E3D3E3F40404041424243
444444454546454647464747484748484948494A4A4A4A4B4B4B4C4C4D4C4D4E4E4F4E4F4F504F4F
50504F505050505051515151515251525252525252
>
<
4E4F50515152535455565758595A5B5D5D5D5E606162636465666869696A6B6C6D6E6F7071707172
7374767778787A7B7C7D7E7F8081828384858687888A8B8C8D8E8F9091929192939495969797999A
9B9C9E9F9FA0A2A3A4A5A7A8A9A9ABACADAEAFB0B1
>
<
7C7D7E7F8180828384858687898A8B8C8E90919294959698999A999B9C9D9E9FA0A1A2A3A4A6A7A9
AAABACACAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C2C3C4C5C6C7C8C9CBCCCDCECFD0D1D2D4
D5D6D7D8D9DBDCDDDFE0E1E3E4E6E7E8EAECEDF0F2
>
<
00000000000000000000000000010101010101020202030303030304040405050606070708080909
0A0B0B0C0D0E0E0F1010111213131415161618191A1A1B1C1D1E1F202122232425262728292A2B2C
2D2F2F3032333335363738393B3C3D3E3F41414244
>
<
D6D5D5D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBA
B9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A0A09F9E9D9D9C
9B9A9A999897979695949493929191908F8E8E8D8C
>
<
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C
8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6E6D6C6B6A6968676665
64636261605F5E5D5C5B5A59585756555453525150
>
<
89888786858584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
3B3A393837363534333231302F2E2D2C2B2A292827
>
4 %_Br
<
5252535353545454545455555556565656575757575858585858595958585858595959595A5A5A5B
5B5B5B5C5C5C5D5D5D5E5E5F5F60606061
>
<
B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C3C4C5C6C7C8C8C9CBCECFD0D1D2D2D3D4D5D6D6
D7D8D9DADBDCDDDDDEDFE0E0E1E2E3E3E4
>
<
F2F2F4F3F2F4F3F1F3F1EFF1EFEDEDECEBEDEDEDEFEEEDEEECEAEBE9E8E8E7E8E6E5E6E5E4E5E3E1
E2E0DEDFDDDBDCDBDADBDAD8D9D7D5D6D4
>
<
44454648494A4C4D4F505253555658595A5C5D5F6062646567686A6C6C6E707173747677797B7D7E
8082838587888A8B8D8E9091939596989A
>
<
8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A69686766
6564636261605F5E5D5C5B5A5958575655
>
<
504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817
>
<
27272626262525252424242323232222222121212020201F1F1F1E1E1E1D1D1C1C1C1B1B1B1A1A1A
1919191818181717171616161515151414
>
4 %_Br
[
0.000671 0.042329 0.132448 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 %_BS
%_0.000671 0.042329 0.132448 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 Bs
0.162783 0.306157 0.484749 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 %_BS
%_0.162783 0.306157 0.484749 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 Bs
0.322393 0.694942 0.947936 0.265843 0.54902 0.313726 0.152941 2 50 78.0899 %_BS
%_0.322393 0.694942 0.947936 0.265843 0.54902 0.313726 0.152941 2 50 78.0899 Bs
0.379828 0.894408 0.831479 0.602014 0.333333 0.090196 0.078431 2 50 100 %_BS
%_0.379828 0.894408 0.831479 0.602014 0.333333 0.090196 0.078431 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Desert Sunset)
(Desert Sunset) 0 6 Bd
[
<
393B3C3C3D3E3F414143444646474849494A4C4D4D4E4F4F505152525354545657575859595A5C5C
5D5E5E5F606061616263636464656567686869696A6A6B6B6D6D6E6E6F6E706F7070717171727274
73737574767676777777777878787879797979
>
<
58595A5C5D5E5F60626364656768696A6C6B6C6E6F7071737475767677787A7B7C7E7E7F80828385
8485878889898B8C8E8D8F9091919394939596969799989A9B9B9C9E9D9F9EA0A2A2A3A3A4A4A6A5
A7A7A8A8AAAAABABABACACACADADADAEAEAEAE
>
<
2E2F2E2F302F30313032333233343335353637363737373738373838393A393A393A3B3C3C3B3C3B
3D3C3D3C3D3D3E3F3E4040413F414041414041414241434243434243434444444343444443454444
45454446454546464645464645454746464646
>
<
00000000000000000000000000000000000000000000000000000000000000000101010101010101
01010101020202020202020303030303040404040404050505050505060606070707070707080808
0808080909090A0A0A0A0B0B0B0B0B0B0B0B0B
>
<
C5C4C3C3C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABABAAA9A9
A8A7A7A6A5A5A4A4A3A2A2A1A1A0A09F9E9E9D9D9C9C9B9B9A9A9999989897979696959595949493
93939292919191909090908F8F8F8F8E8E8E8E
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8E8D8C8B8A8988888786858483
838281807F7F7E7D7C7C7B7A7979787777767575747373727171706F6F6E6E6D6C6C6B6B6A6A6969
68686767666665656564646463636362626262
>
<
B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A8A7A6A6A5A4A4A3A3A2A1A1A0A09F9F9E9D9D9C9C
9B9B9A9A99999897979696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8B8A8A8A
89898988888887878787868686868585858585
>
4 %_Br
<
202122232425262728292A2B2C2E2F30313233343637373839
>
<
4142434546474647484A4B4C4D4E4F50515252535454565758
>
<
52504F4D4D4A4B494846454340403E3D3B3A3838353432312E
>
0.000031
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D0CFCECDCCCBCAC9C8C7C6C5
>
<
BDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7
>
<
A7A8A8A9A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B2B3B3B4
>
4 %_Br
<
05060708090A0A0B0C0D0E0F10121314161718191A1B1C1C1C1D1F20
>
<
2C2D2E2E2F3031323332343536373738393A3A3B3C3D3D3E3F404041
>
<
7B7977777573716F6D6D6B6A686667656361615F5D5B5B5957545552
>
0.000031
<
F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E1E0DFDE
>
<
D2D1D0D0CFCECDCCCBCBCAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEBD
>
<
929394949596979899999A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7
>
4 %_Br
<
03030303030304030303040404040404040404040404040405050505050505060505050505050506
06060606050505050505050505050506050505050505
>
<
7C7B79787876757472716F6E6D6B6A69676766646362605F5E5D5B5A595756545352514F4E4D4B4A
494746444342403F3D3C3B39383736343332302F2E2C
>
<
9F9E9E9D9D9C9B9B9A999A989798979696959494939293929191908F8E8F8D8C8D8C8B8B8A898889
8887878785848483828281807F7F7E7D7E7D7C7B7C7B
>
0.000031
<
F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6
F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
>
<
9798999A9A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC
BDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2
>
<
6869696A6A6B6C6C6D6E6E6F7070717272737474757676777878797A7B7B7C7D7D7E7F7F80818282
838484858687878889898A8B8C8C8D8E8E8F90919192
>
4 %_Br
<
282727262626252423232221212020201F1E1D1D1C1B1B1A19191817161615141413121211100E0E
0D0B0B0A09090807060605040403
>
<
9F9E9E9D9C9C9B9C9A999998979796959594939392939190908F8E8F8E8C8D8B8A8A898988878886
85858382828180807F7F7E7D7D7C
>
<
F0EFEDEBEAE8E7E5E3E1E0DEDDDBD9D8D6D5D3D1D0CFCDCCCAC9C8C5C3C2C1BFBEBDBBBAB9B7B6B4
B3B1AFAEACABA9A7A6A4A3A2A09F
>
<
07060606050505050404040303030303020202020202020101010101010101010100000000000000
0000000000000000000000000000
>
<
CECFCFD0D1D1D2D3D4D4D5D6D6D7D8D8D9DADBDBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E9E9
EAEBEBECEDEDEEEFF0F0F1F2F2F3
>
<
75767677787879797A7B7B7C7D7D7E7F7F8081818282838484858686878888898A8A8B8B8C8D8D8E
8F8F909191929393949495969697
>
<
32333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A
5B5C5D5E5F606162636465666768
>
4 %_Br
[
0.47538 0.68368 0.275608 0.044678 0.556863 0.384314 0.521569 2 50 100 %_BS
%_0.47538 0.68368 0.275608 0.044678 0.556863 0.384314 0.521569 2 50 100 Bs
0.224826 0.345525 0.180331 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 %_BS
%_0.224826 0.345525 0.180331 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 Bs
0.125032 0.255436 0.322667 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 %_BS
%_0.125032 0.255436 0.322667 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 Bs
0.02118 0.174197 0.481025 0.000031 0.972549 0.823529 0.572549 2 48 38.764 %_BS
%_0.02118 0.174197 0.481025 0.000031 0.972549 0.823529 0.572549 2 48 38.764 Bs
0.01178 0.486061 0.622217 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 %_BS
%_0.01178 0.486061 0.622217 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 Bs
0.157443 0.62295 0.94229 0.026734 0.807843 0.458824 0.196078 2 50 0 %_BS
%_0.157443 0.62295 0.94229 0.026734 0.807843 0.458824 0.196078 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient)
(Radial Gradient) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Soft Black Vignette)
(Soft Black Vignette) 1 3 Bd
[
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
[
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 68.3944 73.8792 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 68.3944 73.8792 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 88.7329 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 88.7329 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FFFFFFFFFEFCFBFAF9F8F7F6F5F3F2F1F0EEEDECEBEAE8E8E7E5E4E3E2E1E0DEDDDCDAD9D7D6D5D4
D2D1D0CECDCCCAC9C8C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B3B1B0AEADACAAA9A7A6A4A3A2A09F9D
9C9B99999796959392908F8D8B8A888785848381807E7D7B7A79787675747271706F6E6C6B6A6866
656362615F5E5D5C5B59585755545351504E4D4C4A49484746444342403E3D3C3A39373634333230
2F2E2D2B2A282725242221201E1D1B1A181715141312110F0E0D0B0A09070605040201
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFCFCFCFCFCFB
>
<
404040403F3F3F3E3D3D3C3C3C3C3C3B3B3B3B3B3B3B3B3939393939393939393939393939393737
37373737373636363636363636353535353535353535363636363535343434343434343434353535
35353534343434343434343434343434343232323232323232323232323232323030303030303131
313131323232333131313131313131313131313131312F2F2F302F2F2F2F2F2F2F303030302D2E2E
2E2E2E2E2E2D2D2D2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2828282828282828
>
<
1D1D1E1E1E1E1E1E1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1B1B1B1B1B1A1A1A1A1A1A1A19191A1818
19181818181818181818181818161616151515151514141313131313121212121212121212111111
1110100F0E0E0D0D0D0D0D0D0D0D0D0C0C0B0B0B0A0A0A0909090808080808080707060606060505
05050404040303030303030303030303030202020202010101010101010101010101010100000000
0000000000000000000000000000000000000000000000000000000000000000000000
>
<
2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9
CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
27272727272626262626262626262525252525252525252424242424242424232323232323232323
2222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E
1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A
19191919191919191818181818181818181717171717171717171616161616161616161515151515
1515151514141414141414141313131313131313131212121212121212121111111111
>
<
6F6F6F6F6F6F6F6F7070707070707070707070707070707171717171717171717171717171717272
72727272727272727272727272737373737373737373737373737373747474747474747474747474
74747475757575757575757575757575757676767676767676767676767676767777777777777777
777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A
7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C
>
4 %_Br
<
C4C4C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D8D8D9
D9DADBDBDCDCDDDDDEDEDFE0E0E1E2E3E3E5E6E6E7E7E8E8E9EAEAEBEBECEDEDEEEEEFEFF0F0F1F2
F2F3F4F5F5F6F6F7F8F8F9FAFAFBFCFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
3E4042434547484A4C4D4F5052545557585A5C5D5F61636466686A6C6D6F71727476787A7B7E7F81
838587888A8C8E8F91939597999B9D9FA1A5A7A9ACADAFB1B3B5B6B8BABBBEBFC1C3C5C7C9CBCDCE
D0D2D4D6D7D9DBDDDFE0E1E3E5E7E8E9ECEDEFF0F1F4F4F5F6F7F9FAFBFCFEFFFF
>
<
3B3C3B3C3B3B3C3B3B3A3B3B3A3B393A3B393A3B393A383939383837383837383637383637363637
36363536373636373636353536343534343433333233343333323334333433333433343433343334
35343534353534353435363637363738373838383938393B3A3C3B3D3E3E3F3F40
>
<
00010101010101010101010101010102020202020303030303030303040404050405050505050606
06070607070707080808080909090A090A0A0A0B0A0B0C0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F10
10101110111211121112131314131415151615161817181A191B1A1B1C1B1C1C1D
>
<
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
>
<
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271
706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
>
<
B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B
9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A8989888787868585848483
82828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F
>
4 %_Br
<
DADADADADADAD9D9D9D9D9D9D9D9D8D8D8D7D7D7D7D7D6D6D6D6D6D6D5D5D5D4D4D4D4D3D3D3D3D3
D2D2D2D2D2D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCB
CBCBCBCACACACACACAC9C9C9C8C8C8C8C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C4C4C4
>
<
3F3F3F3E3E3E3E3E3E3D3D3E3E3E3D3D3D3D3D3C3C3D3D3D3D3C3C3C3C3D3C3C3C3C3C3B3C3C3C3C
3D3C3C3C3D3D3C3C3C3D3D3D3C3C3D3D3D3C3C3C3D3D3C3C3D3D3D3E3D3D3D3E3E3D3D3E3E3E3F3D
3E3E3E3F3D3E3E3E3F3D3E3E3F3F403E3E3F3F403E3F3F3F403E3E3E3F3F3F3E3E3E
>
<
FDFBF8F6F5F2F0EEECEAE8E6E4E1E0DEDCDAD9D8D6D4D2D0CECDCBC9C7C6C5C3C1C0BEBDBBB9B8B6
B4B3B1B0AEACABAAA8A6A4A2A1A09E9C9A979593918F8F8D8B8987858482807E7C7B7A7876747271
706E6C6A6A6866656362615F5D5B595957555351504F4D4B494947454341403F3D3B
>
<
1B1C1C1A1A1A1A1A1A19191919191818181818161616161616151515151514141414141313131312
121111111111101010100F0F0E0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A090909090808080707070706
06060605050504040404030303030302020202020201010101010101010101010000
>
<
1E1E1E1E1E1F1F1F1F1F1F1F1F1F2020202020202020212121212121212121222222222222222222
23232323232323232424242424242424242525252525252525252626262626262626272727272727
27272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B
>
<
83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A
8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F909090909091919191919192
92929292939393939394949494949495959595959696969696979797979797989898
>
<
4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768
696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
4 %_Br
<
15161718191B1B1D1D1F20212122232425262728292B2B2D2E2F3031333435363738393A3C3D3E3F
4042434445464748494B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A
6B6C6D6E6F7072737475767778797A7B7C7D7E7F8081828384858687898A8B8C8D8F8F9091929394
95969798999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B5B6B7B8B9
B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C8C9CACBCBCCCDCDCECFCFD0D0D1D1D2D2D3D3
D4D5D5D5D6D6D7D8D8D9D9DADA
>
<
00000100010101010201020202020302030203030303040304040404030404040405040505050506
0607060707080708080908090908090809090A090A090A0A0B0A0C0B0C0C0D0C0D0D0E0D0E0E0F0E
0E0F0E0F0F100F1010111112111212131213131414151416151716161717181819181A191A1A1B1B
1C1B1C1C1D1D1E1E1F1F201F20202021212221222223232423252425252626272627272828292928
2A292A2A2B2B2C2C2D2D2E2E2F2F303030303131323233333434333434353536363737383839393A
3A3B3B3C3C3D3D3D3D3E3E3F3F
>
<
F1F1F1F1F1F0F1F0F1F1F1F1F2F1F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFCFCFDFDFDFEFEFE
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFEFDFD
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000010101010101
01010101010101010202020202020202020303030303030403040404040404050405050505060606
0606070707070808090809090A0A0B0B0B0B0C0C0D0D0E0E0F0E0E0F0F1010111112121313141415
1516161717181819191A1A1C1B
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E
>
<
E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6
D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3
C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0
AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D
9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A89
89888887878686858584848383
>
<
282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D
2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F30303030303030303031313131313131
31323232323232323232333333333333333334343434343434343535353535353535353636363636
36363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B
3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F
40404040404040404141414141
>
4 %_Br
<
02020202020202020303030303030303030101010101010102020101010202020202020202020202
02020202020303030303030203030303030303030303030303040404040404040404040404040405
05050505050505050505060606060606060707070707070707080808080909080808080808080908
08080808080909090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0E0F0D0E0E0E0E0E0F
0F0F0F0F0F1010101010101010101010111111111212121212121312121213131313131314141414
14141515
>
<
FCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F3F2F1F1F0EFEEEEEDECECEBEAE9E8E8E7E6E5E4E3E2E2E1
E0DFDEDDDCDBDAD9D8D6D5D4D3D2D1D0D0CFCECDCCCAC9C8C7C6C5C3C2C1C0BEBDBCBBBAB9B7B6B5
B3B2B0AFAEACABAAA8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A8987868483817F7E7C7B
797877757472716F6E6C6B696866656362605F5D5C5A595756555352504F4D4C4B4A484745444241
3F3E3C3B393837353432302F2D2C2A2927252422211F1E1C1B191716151312100F0D0C0B09080705
04030100
>
<
F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFCFCFCFCFBFBFBFBFCFCFDFDFEFEFEFEFEFE
FEFEFEFEFDFDFCFCFCFBFBFAFAFAF9F9F9F9F8F8F8F8F8F9F9F9F9FAFAFAFAFAFAFAFAFAFAF8F8F8
F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFDFCFCFCFBFBFAFAFAF9F9
F8F8F7F7F7F7F7F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7
F7F7F6F6F6F5F5F5F5F5F4F4F3F3F2F2F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1
F2F2F2F1
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2
>
<
1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445
464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D
6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBD
BEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
E6E7E8E9
>
<
24242424242424242424242424242424242424242424242424242525252525252525252525252525
25252525252525252525252525252525252525252525252525252525252525252525252525262626
26262626262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727272727272728282828282828282828282828282828282828282828
28282828
>
4 %_Br
[
0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS
%_0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 Bs
1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 %_BS
%_1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 Bs
0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 %_BS
%_0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 Bs
0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 %_BS
%_0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 Bs
0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS
%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs
0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 %_BS
%_0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
02020202020202020303030303030303030101010101010102020101010202020202020202020202
02020202020303030303030203030303030303030303030303040404040404040404040404040405
05050505050505050505060606060606060707070707070707080808080909080808080808080908
08080808080909090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0E0F0D0E0E0E0E0E0F
0F0F0F0F0F1010101010101010101010111111111212121212121312121213131313131314141414
14141515
>
<
FCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F3F2F1F1F0EFEEEEEDECECEBEAE9E8E8E7E6E5E4E3E2E2E1
E0DFDEDDDCDBDAD9D8D6D5D4D3D2D1D0D0CFCECDCCCAC9C8C7C6C5C3C2C1C0BEBDBCBBBAB9B7B6B5
B3B2B0AFAEACABAAA8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A8987868483817F7E7C7B
797877757472716F6E6C6B696866656362605F5D5C5A595756555352504F4D4C4B4A484745444241
3F3E3C3B393837353432302F2D2C2A2927252422211F1E1C1B191716151312100F0D0C0B09080705
04030100
>
<
F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFCFCFCFCFBFBFBFBFCFCFDFDFEFEFEFEFEFE
FEFEFEFEFDFDFCFCFCFBFBFAFAFAF9F9F9F9F8F8F8F8F8F9F9F9F9FAFAFAFAFAFAFAFAFAFAF8F8F8
F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFDFCFCFCFBFBFAFAFAF9F9
F8F8F7F7F7F7F7F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7
F7F7F6F6F6F5F5F5F5F5F4F4F3F3F2F2F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1
F2F2F2F1
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2
>
<
1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445
464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D
6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBD
BEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
E6E7E8E9
>
<
24242424242424242424242424242424242424242424242424242525252525252525252525252525
25252525252525252525252525252525252525252525252525252525252525252525252525262626
26262626262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727272727272728282828282828282828282828282828282828282828
28282828
>
4 %_Br
<
15161718191B1B1D1D1F20212122232425262728292B2B2D2E2F3031333435363738393A3C3D3E3F
4042434445464748494B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A
6B6C6D6E6F7072737475767778797A7B7C7D7E7F8081828384858687898A8B8C8D8F8F9091929394
95969798999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B5B6B7B8B9
B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C8C9CACBCBCCCDCDCECFCFD0D0D1D1D2D2D3D3
D4D5D5D5D6D6D7D8D8D9D9DADA
>
<
00000100010101010201020202020302030203030303040304040404030404040405040505050506
0607060707080708080908090908090809090A090A090A0A0B0A0C0B0C0C0D0C0D0D0E0D0E0E0F0E
0E0F0E0F0F100F1010111112111212131213131414151416151716161717181819181A191A1A1B1B
1C1B1C1C1D1D1E1E1F1F201F20202021212221222223232423252425252626272627272828292928
2A292A2A2B2B2C2C2D2D2E2E2F2F303030303131323233333434333434353536363737383839393A
3A3B3B3C3C3D3D3D3D3E3E3F3F
>
<
F1F1F1F1F1F0F1F0F1F1F1F1F2F1F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFCFCFDFDFDFEFEFE
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFEFDFD
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000010101010101
01010101010101010202020202020202020303030303030403040404040404050405050505060606
0606070707070808090809090A0A0B0B0B0B0C0C0D0D0E0E0F0E0E0F0F1010111112121313141415
1516161717181819191A1A1C1B
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E
>
<
E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6
D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3
C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0
AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D
9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A89
89888887878686858584848383
>
<
282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D
2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F30303030303030303031313131313131
31323232323232323232333333333333333334343434343434343535353535353535353636363636
36363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B
3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F
40404040404040404141414141
>
4 %_Br
<
DADADADADADAD9D9D9D9D9D9D9D9D8D8D8D7D7D7D7D7D6D6D6D6D6D6D5D5D5D4D4D4D4D3D3D3D3D3
D2D2D2D2D2D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCB
CBCBCBCACACACACACAC9C9C9C8C8C8C8C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C4C4C4
>
<
3F3F3F3E3E3E3E3E3E3D3D3E3E3E3D3D3D3D3D3C3C3D3D3D3D3C3C3C3C3D3C3C3C3C3C3B3C3C3C3C
3D3C3C3C3D3D3C3C3C3D3D3D3C3C3D3D3D3C3C3C3D3D3C3C3D3D3D3E3D3D3D3E3E3D3D3E3E3E3F3D
3E3E3E3F3D3E3E3E3F3D3E3E3F3F403E3E3F3F403E3F3F3F403E3E3E3F3F3F3E3E3E
>
<
FDFBF8F6F5F2F0EEECEAE8E6E4E1E0DEDCDAD9D8D6D4D2D0CECDCBC9C7C6C5C3C1C0BEBDBBB9B8B6
B4B3B1B0AEACABAAA8A6A4A2A1A09E9C9A979593918F8F8D8B8987858482807E7C7B7A7876747271
706E6C6A6A6866656362615F5D5B595957555351504F4D4B494947454341403F3D3B
>
<
1B1C1C1A1A1A1A1A1A19191919191818181818161616161616151515151514141414141313131312
121111111111101010100F0F0E0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A090909090808080707070706
06060605050504040404030303030302020202020201010101010101010101010000
>
<
1E1E1E1E1E1F1F1F1F1F1F1F1F1F2020202020202020212121212121212121222222222222222222
23232323232323232424242424242424242525252525252525252626262626262626272727272727
27272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B
>
<
83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A
8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F909090909091919191919192
92929292939393939394949494949495959595959696969696979797979797989898
>
<
4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768
696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
4 %_Br
<
C4C4C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D8D8D9
D9DADBDBDCDCDDDDDEDEDFE0E0E1E2E3E3E5E6E6E7E7E8E8E9EAEAEBEBECEDEDEEEEEFEFF0F0F1F2
F2F3F4F5F5F6F6F7F8F8F9FAFAFBFCFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
3E4042434547484A4C4D4F5052545557585A5C5D5F61636466686A6C6D6F71727476787A7B7E7F81
838587888A8C8E8F91939597999B9D9FA1A5A7A9ACADAFB1B3B5B6B8BABBBEBFC1C3C5C7C9CBCDCE
D0D2D4D6D7D9DBDDDFE0E1E3E5E7E8E9ECEDEFF0F1F4F4F5F6F7F9FAFBFCFEFFFF
>
<
3B3C3B3C3B3B3C3B3B3A3B3B3A3B393A3B393A3B393A383939383837383837383637383637363637
36363536373636373636353536343534343433333233343333323334333433333433343433343334
35343534353534353435363637363738373838383938393B3A3C3B3D3E3E3F3F40
>
<
00010101010101010101010101010102020202020303030303030303040404050405050505050606
06070607070707080808080909090A090A0A0A0B0A0B0C0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F10
10101110111211121112131314131415151615161817181A191B1A1B1C1B1C1C1D
>
<
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
>
<
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271
706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
>
<
B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B
9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A8989888787868585848483
82828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F
>
4 %_Br
<
FFFFFFFFFEFCFBFAF9F8F7F6F5F3F2F1F0EEEDECEBEAE8E8E7E5E4E3E2E1E0DEDDDCDAD9D7D6D5D4
D2D1D0CECDCCCAC9C8C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B3B1B0AEADACAAA9A7A6A4A3A2A09F9D
9C9B99999796959392908F8D8B8A888785848381807E7D7B7A79787675747271706F6E6C6B6A6866
656362615F5E5D5C5B59585755545351504E4D4C4A49484746444342403E3D3C3A39373634333230
2F2E2D2B2A282725242221201E1D1B1A181715141312110F0E0D0B0A09070605040201
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFCFCFCFCFCFB
>
<
404040403F3F3F3E3D3D3C3C3C3C3C3B3B3B3B3B3B3B3B3939393939393939393939393939393737
37373737373636363636363636353535353535353535363636363535343434343434343434353535
35353534343434343434343434343434343232323232323232323232323232323030303030303131
313131323232333131313131313131313131313131312F2F2F302F2F2F2F2F2F2F303030302D2E2E
2E2E2E2E2E2D2D2D2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2828282828282828
>
<
1D1D1E1E1E1E1E1E1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1B1B1B1B1B1A1A1A1A1A1A1A19191A1818
19181818181818181818181818161616151515151514141313131313121212121212121212111111
1110100F0E0E0D0D0D0D0D0D0D0D0D0C0C0B0B0B0A0A0A0909090808080808080707060606060505
05050404040303030303030303030303030202020202010101010101010101010101010100000000
0000000000000000000000000000000000000000000000000000000000000000000000
>
<
2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9
CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
27272727272626262626262626262525252525252525252424242424242424232323232323232323
2222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E
1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A
19191919191919191818181818181818181717171717171717171616161616161616161515151515
1515151514141414141414141313131313131313131212121212121212121111111111
>
<
6F6F6F6F6F6F6F6F7070707070707070707070707070707171717171717171717171717171717272
72727272727272727272727272737373737373737373737373737373747474747474747474747474
74747475757575757575757575757575757676767676767676767676767676767777777777777777
777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A
7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C
>
4 %_Br
[
0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 %_BS
%_0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 Bs
0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS
%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs
0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 %_BS
%_0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 Bs
0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 %_BS
%_0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 Bs
1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 %_BS
%_1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 Bs
0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS
%_0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
05050505050606060606060707070707070707070707060606060707070707070707070707070707
0707070808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0A0A0A0A0B0B0B0B0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F
10101010101010111111111111101010101010111111111111111111121212121212121212121212
131313131313131313131313131313131313131414141414141414141414141414141414
>
<
E3E2E2E1E0DFDEDDDCDBDAD8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C6C5C4C3C3C2C1C0BFBDBC
BBB9B9B8B7B5B4B3B1B1B0AEADACAAA9A9A7A6A5A3A3A2A09F9E9E9C9B9998989695939392908F8F
8D8C8A8A898886868583838280807E7C7C7B79787876767573737270706F6D6D6C6C6A6969676766
646463636161605E5E5D5D5C5C5A5A5959575756565454535352525250504F4F4D4D4D4C4C4B4B4B
4949474747464646454545454343434242424240404040403F3F3F3F3F3F3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFDFDFDFCFCFCFCFCFDFDFDFDFDFDFDFDFCFCFCFCFC
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
>
<
00000001010101010101000000000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
>
<
42434445464748494A4B4C4D4E4F50515253545555565758595A5B5C5D5E5F606161626364656667
6869696A6B6C6D6E6F6F7071727374757576777879797A7B7C7D7D7E7F8081818283848485868787
88898A8A8B8C8D8D8E8F8F9091919293939495969697979899999A9B9B9C9D9D9E9E9FA0A0A1A1A2
A3A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B0B1B1B2B2B3B3B3B4B4B5B5B5
B6B6B7B7B7B8B8B8B9B9B9B9BABABABBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBE
>
<
24242424242424242424242424242424242424242424242424242424242424242424242424242424
24242424242424242424242424242424242424242424242424242424242423232323232323232323
23232323232323232323232323232323232323232323232323232323232323232323232323232323
23232323232323232323232323232323232323232323232323232323232323232323232323232323
232323232323232323232323232323232323232323232323232323232323232323232323
>
4 %_Br
<
15151414141414141313131414141313131312121212121211111111101010101111111111111111
111010101010100F0F0F0F0F0E0F0F0F0F0F0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0C0B0B0B0B0B
0A0A0A0A0A0A0A09090909090A0A0B0B0B0A0A0A0A09090909090909090908080808080909080808
08080707070707060606060606060606070707070707070606060606060606060606060505060606
0606060505050505
>
<
00010304050708090B0C0D0E101113141617191B1C1E1F2122242527292A2C2D2E30323335363839
3B3C3D3F404243454648494B4C4D4E505153545657585A5B5D5E606163646667696A6B6D6E707173
747677797A7C7D7F8182848687888A8B8C8E8F9192949597989A9B9D9EA0A1A2A4A5A7A8A9ABACAD
AFB0B1B3B4B5B7B8BABBBCBDBFC0C1C2C3C4C5C7C8C9CACBCCCDCFD0D0D1D2D3D4D5D6D7D9DADBDC
DDDEDFE0E1E2E2E3
>
<
F1F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F1F1F0F0F0F1F1F2F2F3F3F5F5F5F6F6F6F6F6
F6F7F7F7F8F8F8F8F8F9F9F8F8F9F8F8F8F8F8F8F8F7F7F8F8F8F8F8F8F8F8F8F8F8F8F7F7F8F8F8
F8F9F9F9FAFAFAFBFBFCFCFCFDFDFEFEFDFDFDFDFDFDFCFCFBFDFCFCFCFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFDFDFDFEFEFEFFFFFFFFFFFF
FFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000101
0101010101000000
>
<
F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECEC
ECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEA
EAEAEAEAEAEAEAEA
>
<
E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2
C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A
999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372
71706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A
4948474645444342
>
<
28282828282828282828282828282828282828282827272727272727272727272727272727272727
27272727272727272727272727272727272727272727272626262626262626262626262626262626
26262626262626262626262626262626262626262626262626252525252525252525252525252525
25252525252525252525252525252525252525252525252525252524242424242424242424242424
2424242424242424
>
4 %_Br
<
212122212121212120202020201F1F1F1F1F1E1F1F1F201E1E1E1E1E1E1D1E1E1E1F1D1E1E1E1E1D
1D1D1D1D1C1D1D1D1E1C1D1D1D1D1C1C1C1C1C1B1C1C1C1C1B1B1B1B1C1B1B1B1B1B1C1A1B1B1B1B
1A1A1A1A1A1919191A1A191919191918181818181717171717161717171716161717171616161717
17161616161615161616161515151515141415
>
<
8684848381817F7E7E7C7B7B7978787674747371716F6E6E6C6C6B69696867676564646261615F5E
5E5C5B5B595857565454535151504F4F4D4C4C4B49494846464544434241413F3F3D3C3C3B393938
37373533333230302E2D2D2B2A292826262523232220201F1D1E1C1A1A1918181614141313121010
0F0E0E0C0B0B0A090907060605040402020100
>
<
1316181A1D1F2225272A2D2E313436393C3E414445484B4C4F515356585A5D5F616365686A6C6F70
727577797C7E80828486898B8D8F90929497989A9D9EA0A2A3A5A7A8AAACADAFB0B2B4B5B7B8B9BA
BABCBDBEC0C2C3C4C5C6C7C8C9CACCCDCECFCFD0D1D3D4D5D6D7D8D9DADBDCDDDEDEDFE0E1E1E2E3
E3E4E5E5E6E7E7E8E9EBECECEDEEEFF0F0F1F1
>
0.000031
<
D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDCDDDDDDDDDDDEDEDEDEDEDF
DFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4E4E4E4E5E5E5E5E5E5E6E6E6E6E6
E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEE
EEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2
>
<
8E8F8F9091919293939495959697979899999A9B9B9C9D9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8
A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2
C3C3C4C5C5C6C7C7C8C9C9CACBCBCCCDCDCECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADADBDCDC
DDDEDEDFE0E0E1E2E2E3E4E4E5E6E6E7E8E8E9
>
<
B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B
8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
3A393837363534333231302F2E2D2C2B2A2928
>
4 %_Br
<
C1C1C0C0BFC0BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B2B1B1B0AF
AFAEADADACABABAAA9A8A7A7A6A5A4A3A3A2A1A0A09F9E9E9D9C9B9A99999897969594939291908F
8E8D8C8C8B898887868584838281807F7E7D7C7B7A78787675747372706F6E6D6C6B6A6968676664
636261605F5E5C5B5A59585755545352514F4E4D4C4B4948474645434241403E3D3C3B3A39373635
3332302F2E2D2C2A29282625242221
>
<
303030303133333333333434343435373737373737383838383A3A3B3B3B3B3B3C3C3E3E3E3F3F3F
40404040424343434444444545454747484848494949494B4C4C4C4D4D4D4E4E4E50505151525252
5353535556565757585858595B5B5B5C5C5C5D5D5D5E606061616162626363636566666767676868
696A6B6B6B6C6C6C6D6D6E6F707071717172727373757576767677777778797A7A7A7B7B7B7C7D7D
7F8080808181818282828585858686
>
<
40404040403F3F3F3F3F3F3F3F3E3E3D3D3D3D3D3D3D3D3D3C3B3B3B3B3B3C3C3C3C3B3B3A3A3A3A
3A3A3A3A38383838383838373737363636353535353534333332323232323231313030302F2F2F2F
2F2E2E2D2D2D2C2C2E2E2D2D2C2B2B2B2B2B2B2A2A2A292928282828282727272525252525252525
252323232322222222212120201F1F1F1E1E1E1D1D1C1B1B1B1B1C1C1C1C1A1A1A1A1A1919191918
171716161616161515151413131313
>
0.000031
<
292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8
C9CACBCCCDCECFD0D1D2D3D4D5D6D7
>
<
A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C
9C9C9C9C9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9999999999999999999998989898989898
98989897979797979797979796969696969696969696959595959595959595959494949494949494
94939393939393939393939292929292929292929291919191919191919190909090909090909090
8F8F8F8F8F8F8F8F8F8F8E8E8E8E8E
>
<
B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B4B4B4B4B4B4B4B4B4B4
B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4
B4B4B4B4B4B4B4B4B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B2B2B2B2B2B2B2B2B2B2B2B2B2B2
B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2
>
4 %_Br
[
0.077852 0.240574 0.986908 0.000031 0.929412 0.745098 0.137255 2 50 100 %_BS
%_0.077852 0.240574 0.986908 0.000031 0.929412 0.745098 0.137255 2 50 100 Bs
0.021393 0.890929 1 0.001801 0.917647 0.258824 0.141176 2 35.5263 79.7753 %_BS
%_0.021393 0.890929 1 0.001801 0.917647 0.258824 0.141176 2 35.5263 79.7753 Bs
0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 55.618 %_BS
%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 55.618 Bs
0.130159 0.525353 0.073854 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 %_BS
%_0.130159 0.525353 0.073854 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 Bs
0.756619 0.188022 0.252934 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 %_BS
%_0.756619 0.188022 0.252934 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CDCDCECECFCFD0D0D0D1D1D1D2D3D3D3D4D4D5D5D5D5D6D6D6D7D7D7D8D8D8D8D8D8D9D9D9DADADA
DADBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDCDCDCDBDB
DBDADBDADADADADAD9D9D9D9D9D9D8D8D8D7D6D5D5D4D3D2D2D3D2D2D0D0CFCECDCCCBCACA
>
<
0A0B0D0E1012131516181A1B1C1E20212224252728292A2C2D2E2F30323334353638393A3B3C3D3E
3F40414242434445464748494A4B4C4D4E4F5051525353545556575758595A5B5C5C5D5E5F5F6061
62636364656666676869696A6B6B6C6C6D6E6F7071727374757576767878797B7C7D7E7F80
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFAF6F6F3F3F1F0F0EFEEECE9E8E6E5E3E2E0
>
<
0000010101010101020202030303040404050506070808090A0B0B0C0D0E1011121314151718191A
1B1D1E1F212223242627292A2C2D2F30323335383A3B3D3F4042444547494A4C4E4F51525456585A
5C5E5F61636567696A6C6E70727476787A7C7E80828486888A8C8E90929496989A9C9EA0A2
>
<
1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919191919
>
<
ABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584
838281807F7E7D7C7B7A7978777675747372716F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
>
<
4B4B4A4A4949484848474746464645454444434343424241414040403F3F3E3E3D3D3D3C3C3B3B3B
3A3A3939383838373736363535353434333333323231313030302F2F2E2E2D2D2D2C2C2B2B2A2A2A
29292828282727262625252524242323222222212120201F1F1F1E1E1D1D1D1C1C1B1B1A1A
>
4 %_Br
[
0.792508 0.501488 0.879301 0.633875 0.098039 0.211765 0.101961 2 50 98.3146 %_BS
%_0.792508 0.501488 0.879301 0.633875 0.098039 0.211765 0.101961 2 50 98.3146 Bs
0.803464 0.038575 1 0.001282 0.117647 0.670588 0.294118 2 50 0 %_BS
%_0.803464 0.038575 1 0.001282 0.117647 0.670588 0.294118 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Fish Pattern)
(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3818.5 4818.4351 m
-3604.8999 4818.4351 L
-3604.8999 4810.6343 L
-3818.5 4810.6343 L
-3818.5 4818.4351 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-3818.5 4814.5352 m
-3808.4856 4817.0269 -3801.6863 4818.375 -3789.7007 4818.4351 c
-3776.7185 4818.5 -3711.6997 4818.4351 y
-3646.6816 4818.5 -3633.6997 4818.4351 v
-3621.7124 4818.375 -3614.9136 4817.0269 -3604.8999 4814.5352 C
-3614.9136 4812.0435 -3621.7124 4810.6953 -3633.6997 4810.6343 c
-3646.6816 4810.5688 -3711.6997 4810.6343 y
-3776.7185 4810.5688 -3789.7007 4810.6343 v
-3801.6863 4810.6953 -3808.4856 4812.0435 -3818.5 4814.5352 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7691 8691 m
-7593.2451 8691 L
-7593.2451 8670.2842 L
-7691 8670.2842 L
-7691 8691 L
n
0 O
0 g
1 XR
-7593.5586 8686.3184 m
-7608.8247 8672.5303 -7626.5537 8693.4492 -7641.9277 8681.166 C
-7640.4199 8675.5137 -7634.7598 8682.4678 -7632.5176 8677.8213 C
-7632.4341 8676.2207 -7635.6313 8677.7207 -7635.5127 8675.6006 C
-7633.6245 8672.1914 -7628.8955 8672.6885 -7627.5664 8676.7373 C
-7621.3115 8674.7676 -7614.7734 8668.8242 -7608.7847 8670.6172 C
-7607.2671 8671.9678 -7608.0708 8673.1514 -7607.6211 8674.4277 C
-7600.2871 8669.9922 -7591.4644 8679.1279 -7593.5586 8686.3184 C
f
-7637.2842 8687.9326 m
-7637.8247 8688.3086 -7636.9277 8689.4199 -7637.2529 8689.9082 C
-7639.3237 8689.1563 -7641.6919 8685.0781 -7643.4731 8682.3105 C
-7643.2632 8683.8398 -7644.6641 8685.1641 -7646.0781 8682.9326 C
-7646.2383 8682.1152 -7645.3667 8681.8281 -7645.6729 8680.9365 C
-7646.8306 8679.3682 -7647.8472 8680.8535 -7648.7798 8680.625 C
-7649.3184 8679.8613 -7649.6143 8679.2188 -7649.6816 8678.6943 C
-7643.5537 8675.874 -7636.9263 8687.6768 -7630.7456 8688.1025 C
-7630.9048 8691.1152 -7634.8555 8692.8008 -7637.2842 8687.9326 C
f
u
u
0 XR
-7634.1602 8682.6602 m
-7649.0142 8676.1201 -7670.4731 8680.3418 -7686.3687 8680.3193 c
-7692.2988 8680.3125 -7681.8965 8680.3213 -7687.8267 8680.3262 c
N
0 O
0 g
-7631.8052 8681.4395 m
-7649.1475 8674.2637 -7668.9341 8679.0557 -7687.0532 8678.9863 C
-7687.8608 8679.873 -7688.6685 8680.7617 -7689.4751 8681.6475 C
-7688.6973 8681.6475 -7687.9194 8681.6465 -7687.1421 8681.6533 C
-7686.3345 8680.7656 -7685.5273 8679.8789 -7684.7202 8678.9922 C
-7685.3516 8679.002 -7685.9844 8678.9951 -7686.6157 8678.9951 c
-7688.3735 8678.998 -7692.9165 8681.6621 -7689.0376 8681.6572 c
-7688.4063 8681.6572 -7687.7734 8681.6641 -7687.1421 8681.6533 c
-7685.4155 8681.626 -7680.8184 8679.0234 -7684.7202 8678.9922 c
-7685.4976 8678.9834 -7686.2759 8678.9863 -7687.0532 8678.9863 c
-7688.8081 8678.9854 -7693.3574 8681.6328 -7689.4751 8681.6475 c
-7672.1177 8681.7148 -7653.1025 8677.0137 -7636.5151 8683.8789 c
-7635.1035 8684.4639 -7629.8081 8682.2666 -7631.8052 8681.4395 c
-7631.8052 8681.4395 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7673 8691 m
-7691 8691 L
-7691 8673 L
-7673 8673 L
-7673 8691 L
n
u
u
0 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7672.9658 8683.4375 m
-7691 8683.4375 L
-7691 8680.5625 L
-7672.9658 8680.5625 L
-7672.9658 8683.4375 L
-7672.9658 8683.4375 L
f
U
u
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
-7672.9658 8682.7002 m
-7689.5 8682.7002 L
-7689.5 8681.3008 L
-7672.9658 8681.3008 L
-7672.9658 8682.7002 L
-7672.9658 8682.7002 L
f
U
u
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
-7672.9658 8682.3125 m
-7688.5 8682.3125 L
-7688.5 8681.6865 L
-7672.9658 8681.6865 L
-7672.9658 8682.3125 L
-7672.9658 8682.3125 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 3)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7673 8691 m
-7691 8691 L
-7691 8673 L
-7673 8673 L
-7673 8691 L
n
u
u
0 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7673 8683.4375 m
-7691 8683.4375 L
-7691 8680.5625 L
-7673 8680.5625 L
-7673 8683.4375 L
-7673 8683.4375 L
f
U
u
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
-7673 8682.7002 m
-7691 8682.7002 L
-7691 8681.3008 L
-7673 8681.3008 L
-7673 8682.7002 L
-7673 8682.7002 L
f
U
u
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
-7673 8682.3125 m
-7691 8682.3125 L
-7691 8681.6865 L
-7673 8681.6865 L
-7673 8682.3125 L
-7673 8682.3125 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7690.8833 8690.9551 m
-7599.0479 8690.9551 L
-7599.0479 8686.6758 L
-7690.8833 8686.6758 L
-7690.8833 8690.9551 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7690.6631 8688.2754 m
-7691 8688.3418 -7690.4814 8688.5313 -7690.8833 8688.3887 C
-7690.8379 8688.2705 -7690.7725 8688.1816 -7690.6631 8688.2754 C
f
-7600.1675 8688.4414 m
-7601.2524 8689.2041 -7602.6816 8688.4336 -7603.8701 8688.9199 C
-7604.0098 8688.9521 -7603.8345 8688.502 -7604.1484 8688.6025 C
-7605.3008 8689.1953 -7607.1162 8688.8418 -7608.5195 8688.3848 C
-7608.4346 8688.2666 L
-7608.7017 8688.1816 -7609.0283 8688.5723 -7609.3115 8688.5176 C
-7609.3135 8688.4395 -7609.2207 8688.4063 -7609.2861 8688.2988 C
-7609.3574 8688.5352 -7609.7983 8688.4082 -7609.9185 8688.584 C
-7610.0303 8688.4922 -7610.0195 8688.3047 -7610.1641 8688.2012 C
-7610.3262 8688.4697 L
-7610.7769 8689.1094 -7611.4209 8688.4258 -7612.0361 8688.7559 C
-7612.0063 8688.6934 -7611.9453 8688.6445 -7611.9941 8688.584 C
-7612.9814 8688.9727 -7614.2168 8688.9004 -7615.3208 8689.043 C
-7615.2769 8688.9482 -7615.2363 8688.7754 -7615.3008 8688.668 C
-7615.3555 8688.9512 -7615.6963 8689.0225 -7615.9922 8689.0781 C
-7616.1255 8688.7871 -7616.4995 8689.3438 -7616.8467 8689.1836 C
-7616.8169 8689.1191 L
-7617.0732 8689.4238 -7617.1973 8688.9434 -7617.4053 8689.3086 C
-7617.5684 8689.0801 L
-7617.6807 8689.4902 -7617.9395 8688.8672 -7618.1514 8689.0762 C
-7618.1445 8689.1602 L
-7618.3442 8689.2598 -7618.4482 8689.0537 -7618.6338 8689.123 C
-7618.6514 8689.0762 L
-7619.0854 8689.1836 -7619.3379 8688.9551 -7619.3271 8689.2754 C
-7619.4795 8689.0186 -7618.9063 8689.1582 -7619.1455 8688.7852 C
-7620.5732 8689.1152 -7622.0459 8689.0508 -7623.4834 8689.0566 C
-7623.6465 8688.9277 -7623.7505 8688.8887 -7623.7871 8688.7676 C
-7623.9307 8688.832 -7624.3281 8688.8262 -7624.4585 8688.9902 C
-7624.4102 8688.9834 -7624.5513 8688.8262 -7624.6274 8688.8105 C
-7624.8887 8688.6895 -7624.9131 8689.1621 -7625.2002 8689.0186 C
-7625.0859 8688.9336 -7625.0469 8688.8301 -7625.0854 8688.7109 C
-7625.3301 8688.9609 -7625.6577 8688.9209 -7625.9473 8689.002 C
-7625.9023 8688.9482 -7625.8325 8688.916 -7625.8433 8688.8154 C
-7626.1602 8689.0986 -7626.4209 8688.7559 -7626.6982 8688.9346 C
-7626.5947 8688.75 L
-7627.0415 8688.5254 -7626.7266 8689.1367 -7627.1128 8689.0039 C
-7627.02 8688.9453 -7627.0527 8688.873 -7627.0361 8688.7979 C
-7627.3965 8689.1338 -7627.9795 8689.0225 -7628.3389 8689.1367 C
-7628.3174 8689.1113 -7628.3232 8689.0605 Y
-7628.7148 8689.1025 -7629.1245 8688.998 -7629.5552 8689.1445 C
-7629.7119 8689.0625 -7629.5039 8688.6934 -7629.9185 8688.7617 C
-7629.9033 8689.1328 -7630.6221 8688.9141 -7630.3779 8689.334 C
-7630.7319 8689.2734 -7631.2925 8689.1338 -7631.5283 8689.2598 C
-7631.3691 8689.1191 -7631.7007 8688.8066 -7631.4063 8688.7754 C
-7631.6289 8688.5498 L
-7631.5957 8688.3984 -7631.3999 8688.6016 -7631.4707 8688.4102 C
-7631.6182 8688.4258 -7632.0479 8688.5723 -7632.1797 8688.5117 C
-7632.4531 8688.7393 -7632.7041 8689.1641 -7633.1465 8689.2109 C
-7632.9385 8689.0664 -7633.2646 8688.8018 -7633.1235 8688.7383 C
-7633.7407 8689.4492 L
-7633.8877 8689.4668 -7633.7725 8689.1563 -7633.9854 8689.2529 C
-7633.9746 8689.3516 -7634.0674 8689.4121 -7634.1318 8689.4922 C
-7634.1875 8689.4492 -7634.7441 8689.584 -7634.8081 8689.2188 C
-7634.8735 8689.0762 -7634.5684 8689.1426 -7634.7314 8689.0117 C
-7635.0029 8689.0156 -7635.0151 8689.1406 -7635.2871 8689.1465 C
-7635.2925 8689.0977 L
-7635.4717 8689.043 -7635.8213 8689.2529 -7635.6265 8689.4551 C
-7635.5015 8689.4668 -7635.6738 8689.2354 -7635.4888 8689.3418 C
-7635.6152 8689.5537 -7635.9312 8689.6133 -7636.2031 8689.6172 C
-7636.1104 8689.5586 -7636.1216 8689.4609 -7636.0845 8689.3574 C
-7636.4497 8689.6445 -7636.8369 8689.7354 -7637.2451 8689.8555 C
-7637.2515 8690.0293 -7637.0928 8689.5391 -7637.0327 8689.6309 C
-7637.5557 8689.3896 -7638.1128 8689.9727 -7638.5479 8689.6201 C
-7638.4766 8689.5898 -7638.5098 8689.8672 -7638.5146 8689.8184 C
-7638.7666 8689.7969 -7638.7549 8689.5449 -7638.9189 8689.6377 C
-7638.9355 8689.4902 -7639.1255 8689.6855 -7639.2944 8689.7305 C
-7639.3818 8689.8369 -7639.3384 8689.6582 -7639.1914 8689.6426 C
-7639.4268 8689.7676 -7640.3691 8689.9941 -7640.9131 8689.7793 C
-7640.9023 8689.877 -7641.2471 8690.1377 -7641.3721 8690.127 C
-7641.3232 8689.8984 L
-7641.4375 8689.7617 -7641.7422 8689.918 -7641.7632 8689.7227 C
-7642.0303 8690 -7640.7344 8689.4863 -7641.0957 8689.7002 C
-7641.1895 8689.5098 -7641.5991 8690.0645 -7641.5215 8689.7529 C
-7641.7725 8689.7617 -7642.0161 8690.0186 -7642.2559 8689.8047 C
-7642.1865 8689.8418 -7642.0522 8689.4873 -7642.2549 8689.5039 C
-7642.6123 8689.5449 -7642.3564 8689.6133 -7642.6465 8689.6895 C
-7642.8281 8689.7832 L
-7642.8398 8690.0059 -7643.1475 8689.7529 -7643.0146 8690.002 C
-7643.0586 8689.8184 -7643.5337 8690.1152 -7643.4971 8689.7461 C
-7643.4473 8689.4551 L
-7643.6016 8689.4766 -7643.7002 8689.7617 -7643.8213 8689.8896 C
-7643.8418 8689.8633 -7643.8823 8689.8047 -7643.8745 8689.7578 C
-7643.8994 8690.2031 -7644.2432 8689.7207 -7644.4268 8690.0645 C
-7644.7505 8689.9102 -7645.2495 8690.0508 -7645.4023 8689.7734 C
-7645.6514 8689.9082 -7645.8784 8690.0684 -7646.1621 8689.9727 C
-7646.1055 8689.9307 -7646.0283 8689.918 -7646.0122 8689.8223 C
-7646.1904 8689.6914 -7646.2344 8689.8086 -7646.3975 8689.8809 C
-7646.3608 8689.8145 -7646.7539 8689.6201 -7646.9521 8689.4629 C
-7647.1992 8689.5957 -7647.1143 8689.8359 -7647.1392 8689.9824 C
-7647.3652 8689.543 -7647.8379 8690.2656 -7648.1211 8689.8672 C
-7648.0352 8689.8066 -7647.7598 8689.6514 -7647.9658 8689.541 C
-7648.1919 8689.1025 -7648.4219 8689.8652 -7648.7861 8689.6543 C
-7648.6968 8690.0186 L
-7648.8594 8689.793 -7649.2334 8690.2305 -7649.1963 8689.8594 C
-7649.3184 8689.9902 -7649.6265 8689.7383 -7649.5859 8690.0938 C
-7650.1846 8689.793 -7651.0425 8690.2754 -7651.4102 8689.6377 C
-7651.4961 8689.6973 -7651.7104 8689.6367 -7651.6665 8689.8193 C
-7651.5239 8690.0176 -7651.4673 8689.6777 -7651.4141 8689.8125 C
-7651.4912 8689.8232 -7651.5078 8689.9209 -7651.5161 8689.9697 C
-7651.7021 8689.8887 -7651.8486 8689.8633 -7651.6729 8689.5674 C
-7652.0869 8689.3477 -7652.1001 8690.1719 -7652.6274 8690.0332 C
-7652.6035 8689.8857 -7652.6436 8689.8301 -7652.7979 8689.8535 C
-7653.0903 8690.1055 L
-7653.4312 8690.0469 -7653.2842 8689.7705 -7653.2925 8689.5215 C
-7653.4746 8689.5645 -7653.6973 8689.5527 -7653.7803 8689.7383 C
-7654.0015 8689.4258 L
-7653.8398 8689.6514 -7654.1514 8689.5762 -7654.2368 8689.6367 C
-7654.1514 8689.5762 L
-7654.1846 8689.4697 -7654.3955 8689.5352 -7654.5024 8689.5664 C
-7654.4766 8689.7207 -7654.2617 8689.7832 -7654.1445 8689.8281 C
-7654.2373 8689.9375 -7654.3823 8689.9121 -7654.5059 8690.041 C
-7654.4648 8689.7969 -7654.8027 8689.8672 -7654.9473 8689.8418 C
-7655.1133 8689.7891 -7655.1348 8690.0605 -7655.1831 8690.0527 C
-7655.1875 8689.9258 -7655.4541 8690.0313 -7655.3247 8689.8535 C
-7655.2681 8689.8125 -7655.1953 8689.9766 -7655.1016 8689.8652 C
-7655.2109 8689.7705 -7655.1982 8689.5498 -7655.4258 8689.7109 C
-7655.5967 8689.832 -7655.3818 8690.1934 -7655.7061 8690.0391 C
-7655.6211 8689.9785 -7655.6055 8689.8809 -7655.5391 8689.793 C
-7655.8433 8689.666 L
-7655.8564 8689.8887 L
-7655.8975 8689.832 -7655.8691 8689.8125 -7655.8877 8689.7832 C
-7655.9785 8690.0176 -7656.3521 8689.8555 -7656.4209 8690.1191 C
-7656.5742 8690.1426 -7656.7441 8689.9648 -7656.8906 8689.9395 C
-7656.8623 8689.9199 L
-7657.0415 8689.7891 -7657.2793 8689.875 -7657.4297 8690.0254 C
-7657.4219 8689.9766 L
-7657.5195 8689.959 -7657.7505 8689.9941 -7657.8735 8690.125 C
-7658.1201 8689.957 -7657.9561 8689.2842 -7658.2295 8689.5645 C
-7658.48 8689.5723 -7658.6221 8689.9727 -7658.5215 8690.1152 C
-7658.9717 8689.9648 -7659.4834 8690.3281 -7659.9009 8689.9824 C
-7659.9658 8690.0723 -7659.9248 8690.1289 -7660.0586 8690.1816 C
-7660.7197 8690.0938 -7661.4551 8690.4453 -7661.9814 8690.0078 C
-7661.79 8689.9141 -7661.9688 8689.7852 -7661.9727 8689.6582 C
-7662.1309 8689.8574 -7662.1631 8689.4512 -7662.2197 8689.793 C
-7662.2041 8689.9941 -7662.2197 8690.0918 -7662.0337 8690.1729 C
-7662.4282 8690.2813 -7663.0283 8690.2813 -7663.2471 8690.0938 C
-7663.1377 8690.1865 -7663.2227 8690.248 -7663.3086 8690.3086 C
-7663.2803 8689.9873 -7663.5713 8689.9395 -7663.7915 8690.0527 C
-7663.8223 8690.248 L
-7663.9658 8690.0469 L
-7664.0503 8690.1094 -7664.0591 8690.457 -7664.2773 8690.2695 C
-7664.2891 8690.1934 -7664.3018 8690.1162 -7664.3418 8690.0605 C
-7664.5693 8690.2207 -7664.8906 8690.4922 -7665.1377 8690.3262 C
-7665.3398 8690.041 L
-7665.4453 8690.0723 -7665.6235 8690.2441 -7665.4375 8690.3262 C
-7665.8594 8690.1543 -7666.1309 8690.1328 -7666.2646 8689.8857 C
-7666.9912 8690.4873 -7668.0459 8690.5117 -7668.8906 8690.4688 C
-7668.8652 8690.3223 L
-7669.0923 8690.1855 -7668.9834 8690.5781 -7669.1416 8690.4766 C
-7669.0684 8690.3369 -7669.3145 8690.1729 -7669.1362 8690.002 C
-7669.4609 8689.8477 -7669.5547 8690.2559 -7669.7656 8690.3223 C
-7669.7979 8690.5146 -7669.5957 8690.1992 -7669.6367 8690.4434 C
-7669.6729 8690.5117 -7670.0859 8690.293 -7670.1362 8690.584 C
-7670.2178 8690.4697 -7670.1543 8690.2559 -7670.1104 8690.1377 C
-7670.3086 8690.2793 L
-7670.5513 8689.9395 -7669.7559 8689.6719 -7670.0107 8689.2529 C
-7670.1934 8689.2988 L
-7670.3682 8688.9941 -7669.71 8688.9551 -7670.1689 8688.8506 C
-7670.3682 8688.9941 -7670.5381 8689.416 -7670.3608 8689.5449 C
-7670.7754 8689.625 -7670.5527 8690.2383 -7670.9985 8690.2139 C
-7671.1201 8690.043 -7670.6416 8690.1729 -7670.7275 8689.9336 C
-7670.9375 8689.6992 -7671.1484 8690.0645 -7671.3354 8689.9824 C
-7671.1279 8690.0918 -7671.3032 8690.3857 -7671.4375 8690.4395 C
-7671.6641 8690.3018 -7671.29 8690.1641 -7671.6113 8690.1338 C
-7671.6641 8690.3018 -7671.9595 8690.4277 -7671.7041 8690.5449 C
-7671.8203 8690.9258 -7672.0381 8690.4395 -7672.2129 8690.7344 C
-7672.3174 8690.4668 -7671.8823 8690.1152 -7672.2354 8689.9814 C
-7672.1792 8690.2393 -7672.6704 8690.332 -7672.4839 8690.7148 C
-7672.6221 8690.6406 -7672.6367 8690.4375 -7672.5361 8690.2793 C
-7672.7334 8690.1201 -7673.0151 8690.75 -7673.0801 8690.2383 C
-7673.1479 8690.502 L
-7673.21 8690.416 -7673.2983 8690.3516 -7673.3994 8690.209 C
-7673.5732 8690.2041 -7673.96 8690.5664 -7673.9443 8690.168 C
-7674 8690.209 -7674.3975 8690.1914 -7674.2441 8690.4668 C
-7673.9971 8690.6348 -7673.96 8690.2656 -7673.8223 8690.6377 C
-7673.9971 8690.334 -7674.1787 8690.6777 -7674.3213 8690.7793 C
-7674.3447 8690.625 L
-7674.4297 8690.6855 -7674.6255 8690.6514 -7674.6787 8690.8184 C
-7674.6133 8690.7305 -7674.6475 8690.625 -7674.7148 8690.5879 C
-7674.8042 8690.8223 L
-7675.1494 8690.9395 -7674.8857 8690.4102 -7675.2217 8690.4785 C
-7674.9663 8690.2969 L
-7675.0225 8690.3359 -7675.1367 8690.1162 -7675.2979 8690.1895 C
-7675.3604 8690.4033 -7675.4775 8690.6602 -7675.5313 8690.8262 C
-7675.7207 8690.9199 -7675.6162 8690.585 -7675.8027 8690.8047 C
-7675.5586 8690.5469 L
-7675.5215 8690.4766 -7675.7231 8690.1934 -7675.9761 8690.1992 C
-7676.1377 8690.2734 -7676.3887 8690.582 -7676.1338 8690.6992 C
-7676.2607 8690.7031 -7676.4385 8690.5723 -7676.3379 8690.416 C
-7676.6255 8690.4902 -7676.2998 8690.6465 -7676.5479 8690.7793 C
-7676.6494 8690.6367 -7676.9658 8690.4336 -7677.1563 8690.2266 C
-7676.8975 8689.8682 L
-7677.0693 8689.8652 L
-7676.8467 8689.5781 -7677.1826 8689.6465 -7677.0566 8689.3438 C
-7677.1743 8689.2969 -7677.3169 8689.3994 -7677.4307 8689.4785 C
-7677.0864 8689.9629 -7677.8159 8690.1406 -7677.7158 8690.582 C
-7678.1875 8690.7031 -7678.0107 8689.5078 -7678.5024 8690.1992 C
-7678.4219 8690.3145 -7678.6533 8690.6504 -7678.3564 8690.5225 C
-7678.6494 8690.4746 -7678.5557 8690.9658 -7678.9014 8690.7832 C
-7678.6455 8690.6016 -7679.1763 8690.3359 -7678.8066 8690.0723 C
-7678.8311 8690.2188 -7678.6001 8690.1836 -7678.5435 8690.1426 C
-7678.6641 8689.9727 -7678.5186 8689.6973 -7678.8184 8689.6973 C
-7679.0015 8689.7393 -7679.2524 8689.748 -7679.2158 8689.9785 C
-7679.2085 8690.2314 -7678.9365 8689.9512 -7679.0537 8690.207 C
-7679.4185 8690.2949 -7679.4795 8689.9102 -7679.6304 8690.3594 C
-7679.3999 8690.3232 -7679.3423 8690.584 -7679.3467 8690.7578 C
-7679.6143 8690.8633 L
-7679.5625 8690.6953 L
-7679.9922 8690.5742 -7679.6895 8691 -7680.1055 8690.9551 C
-7680.3008 8690.623 L
-7680.2017 8690.3369 -7679.6953 8690.75 -7679.7695 8690.2842 C
-7680.04 8690.2656 -7680.1299 8690.502 -7680.3848 8690.3818 C
-7680.3281 8690.3418 -7680.2505 8690.3301 -7680.1943 8690.2891 C
-7680.2915 8690.2734 -7680.3877 8689.6563 -7680.7734 8690.0176 C
-7680.9727 8690.1582 -7680.8262 8690.1836 -7680.8311 8690.3574 C
-7681.2656 8690.4102 -7681.3955 8690.5879 -7681.6753 8690.6152 C
-7681.6177 8690.2754 -7682.1699 8690.582 -7681.8608 8690.2344 C
-7681.7188 8690.4336 -7681.0903 8690.4141 -7680.9365 8690.0898 C
-7681.0947 8689.6865 -7680.5952 8690.1465 -7680.5024 8689.7383 C
-7680.8506 8689.7285 -7680.8335 8689.332 -7680.8896 8689.0723 C
-7680.9863 8689.0537 -7681.0801 8689.1641 -7681.1377 8689.2041 C
-7681.1787 8689.4492 -7681.0522 8689.4453 -7681.0449 8689.6973 C
-7681.4336 8689.6309 -7681.8081 8689.7676 -7682.0225 8690.0059 C
-7682.1523 8689.8848 -7682.1113 8689.6406 -7681.9575 8689.6172 C
-7682.4199 8689.6895 -7682.9141 8689.6563 -7683.3535 8689.582 C
-7683.0693 8689.9814 -7683.8433 8689.6758 -7683.6494 8690.0078 C
-7683.4141 8690.0977 -7683.2119 8690.3818 -7683.3418 8690.5605 C
-7683.4888 8690.5352 -7683.3369 8690.3857 -7683.3984 8690.3008 C
-7683.5859 8690.5186 -7683.6895 8689.9512 -7683.8735 8690.2949 C
-7683.4512 8690.166 -7683.7915 8689.8086 -7683.7139 8689.4961 C
-7684.0186 8689.6719 -7683.7007 8689.2734 -7684.0024 8689.2734 C
-7684.3057 8689.4473 -7684.6787 8689.584 -7685.0161 8689.6514 C
-7685.4399 8689.3555 -7686.0898 8689.6465 -7686.4683 8689.6582 C
-7686.6665 8689.5 -7686.5322 8689.1465 -7686.7471 8689.085 C
-7686.9995 8689.0918 -7686.5601 8689.4668 -7686.9336 8689.3047 C
-7686.8975 8689.2344 L
-7687.0107 8689.3164 -7687.5825 8688.9941 -7687.6929 8689.502 C
-7687.5776 8689.1191 L
-7687.6475 8689.084 -7687.7119 8689.1719 -7687.7695 8689.2129 C
-7687.7725 8689.0879 -7687.8535 8688.9746 -7687.7402 8688.8926 C
-7687.9707 8688.6289 -7688.2241 8688.9346 -7688.4746 8688.9453 C
-7688.3135 8689.1719 L
-7688.7422 8689.3496 -7689.0293 8689.125 -7689.4443 8689.2041 C
-7689.4316 8688.9824 L
-7689.6787 8689.1152 L
-7689.6182 8688.9004 -7689.8447 8688.7617 -7689.9751 8688.9414 C
-7689.3335 8688.3984 L
-7689.1553 8688.5293 -7689.5283 8688.666 -7689.4165 8688.8848 C
-7689.3213 8689.0762 -7688.9375 8689.0156 -7688.8755 8688.8018 C
-7689.0225 8688.7773 -7689.0293 8688.8262 -7689.1436 8688.9063 C
-7689.1919 8688.5977 -7688.9688 8688.6094 -7688.8584 8688.4033 C
-7688.9355 8688.416 -7689.0449 8688.3223 -7689.0615 8688.4199 C
-7688.9102 8688.2695 -7688.7578 8688.2461 -7688.5059 8688.2383 C
-7688.6763 8688.3594 -7688.4131 8688.4297 -7688.4775 8688.5176 C
-7688.4575 8688.2461 -7688.2168 8688.1621 -7687.9053 8688.2383 C
-7687.6831 8688.5527 -7687.3208 8688.0361 -7686.96 8688.123 C
-7687.1064 8688.3984 -7687.2935 8688.6191 -7687.5127 8688.7305 C
-7687.2861 8688.8682 -7687.2607 8688.7227 -7687.0337 8688.8613 C
-7686.9238 8688.6563 -7686.8457 8688.3418 -7686.5503 8688.2168 C
-7686.5342 8688.4199 L
-7686.2666 8688.3164 -7686.2666 8688.0156 -7685.9258 8688.0723 C
-7685.3418 8688.1719 -7684.7407 8688.1719 -7684.2949 8688.1973 C
-7684.2783 8688.3994 L
-7684.0303 8687.9658 -7683.4521 8688.2393 -7683.1182 8688.0469 C
-7682.5503 8688.2422 -7681.8848 8687.8535 -7681.5938 8688.2031 C
-7680.5913 8688.0469 -7679.7148 8687.8945 -7678.6768 8687.9688 C
-7678.8516 8688.2637 L
-7678.6655 8688.0469 -7678.7305 8688.4336 -7678.5479 8688.3896 C
-7678.7578 8688.1543 -7678.2949 8688.084 -7678.1665 8687.9033 C
-7677.7041 8688.1328 -7677.1104 8687.8828 -7676.7007 8687.6758 C
-7676.6846 8687.8789 L
-7676.2705 8687.498 -7675.7759 8687.832 -7675.2598 8687.8945 C
-7675.2007 8687.9785 -7675.1074 8688.1689 -7674.9536 8688.1465 C
-7674.6738 8687.8184 -7674.5273 8687.8418 -7674.1167 8687.6367 C
-7673.8169 8687.6367 -7673.3301 8687.7178 -7673.0254 8687.8457 C
-7671.8975 8687.3848 -7670.7456 8687.6797 -7669.5732 8687.4023 C
-7669.4888 8687.6406 L
-7668.3521 8687.1309 -7666.9541 8687.5938 -7665.9839 8687.332 C
-7666.0776 8687.7393 L
-7665.7734 8687.8652 -7665.3843 8687.6328 -7665.4619 8687.3438 C
-7665.1567 8687.4688 -7664.7007 8687.1465 -7664.5068 8687.4814 C
-7664.1953 8687.5566 -7664.1255 8687.293 -7663.8662 8687.2383 C
-7663.2422 8687.3926 -7663.0107 8687.3574 -7662.4224 8687.2813 C
-7662.5684 8687.2559 L
-7662.6328 8687.3457 -7662.6387 8687.5186 -7662.4922 8687.5449 C
-7662.2725 8687.4316 -7661.6846 8687.6543 -7661.9033 8687.168 C
-7661.2754 8687.4492 -7660.4385 8686.9395 -7659.8271 8687.3184 C
-7659.8789 8687.1855 -7659.7246 8687.1602 -7659.6602 8687.0703 C
-7659.1089 8687.0645 -7658.5293 8687.3359 -7658.0898 8687.1094 C
-7658.0024 8687.1758 -7658.2295 8687.3359 -7658.0049 8687.3496 C
-7657.8721 8687.2988 -7658.0024 8687.1758 -7657.8384 8687.1016 C
-7656.9453 8686.8535 -7656.0303 8687.3574 -7655.2188 8687.293 C
-7653.7754 8687.0361 -7652.2695 8687.166 -7650.8867 8687.123 C
-7650.9023 8687.2207 L
-7650.4395 8686.8477 -7649.8159 8687.6025 -7649.4463 8687.041 C
-7649.3369 8687.1338 -7649.0283 8687.085 -7649.1094 8687.2734 C
-7648.7407 8687.0098 -7648.0771 8687.5215 -7647.5439 8687.1865 C
-7647.5928 8687.1777 -7647.6211 8687.1973 -7647.6777 8687.2393 C
-7647.1392 8687.4551 -7646.6641 8687.1602 -7646.0957 8687.3555 C
-7646.1533 8687.3975 -7646.2583 8687.4277 -7646.2754 8687.5254 C
-7646.0557 8687.7129 -7645.7549 8687.1133 -7645.6348 8687.584 C
-7645.5088 8687.5801 -7645.5449 8687.3477 -7645.6221 8687.3613 C
-7644.3779 8687.5449 -7643.0498 8687.2441 -7641.7549 8687.1367 C
-7640.8271 8687.418 -7641.6982 8687.9297 -7640.9663 8687.5781 C
-7640.9063 8687.6689 -7640.9229 8687.3984 -7640.9131 8687.4961 C
-7640.6299 8687.3643 -7640.4717 8688.0215 -7640.2754 8687.7754 C
-7640.3564 8687.4863 -7640.1445 8687.6133 -7640.1387 8687.4375 C
-7639.5713 8687.625 -7639.4575 8687.8857 -7639.0098 8687.666 C
-7639.0435 8687.8184 L
-7638.5186 8687.3887 -7637.9102 8687.6191 -7637.4673 8687.123 C
-7634.5728 8687.0332 -7631.7983 8686.7578 -7628.9761 8686.7002 C
-7626.1865 8686.7949 -7623.4551 8686.5723 -7620.6221 8686.8359 C
-7619.9585 8687.2354 -7619.9087 8687.2246 -7619.1797 8687.0625 C
-7619.2095 8687.127 -7619.2549 8687.1426 -7619.2061 8687.2031 C
-7619.1699 8686.875 -7618.6929 8687.1719 -7618.6235 8686.8594 C
-7617.5762 8686.9199 -7616.6113 8686.8301 -7615.5337 8686.8281 C
-7615.7041 8686.8633 -7615.7896 8687.1309 -7615.5869 8687.1094 C
-7615.3755 8686.9004 L
-7615.3408 8686.9922 L
-7615.2021 8686.9434 -7615.0513 8686.7813 -7615.1943 8686.6758 C
-7612.4873 8686.3926 -7609.8242 8687.0508 -7607.1729 8686.9697 C
-7606.5435 8687.1064 -7605.6475 8686.9814 -7604.9629 8686.9141 C
-7602.9355 8687.3516 -7601.1079 8687.7041 -7599.0479 8687.3984 C
-7599.3169 8688.2461 -7600.1675 8688.4414 V
f
-7690.2578 8688.2422 m
-7690.1855 8688.4063 -7689.9497 8688.4961 -7690.1377 8688.7148 C
-7690.1611 8688.5605 -7690.2822 8688.3887 -7690.2578 8688.2422 C
f
-7683.9619 8689.9297 m
-7683.9536 8689.8809 -7683.8721 8689.9961 -7683.8521 8690.0225 C
-7683.9297 8690.0352 -7684.0024 8690.1729 -7684.0645 8690.0879 C
-7683.9854 8690.0762 -7683.9976 8689.998 -7683.9619 8689.9297 C
f
-7682.3521 8690.0273 m
-7682.3765 8690.1729 -7682.7207 8690.2891 -7682.9238 8690.3066 C
-7682.3521 8690.0273 L
f
-7680.8521 8690.6289 m
-7680.7227 8690.752 -7680.7583 8690.8193 -7680.9326 8690.8154 C
-7680.9453 8690.7383 -7680.8877 8690.6992 -7680.8521 8690.6289 C
f
-7680.7456 8690.2969 m
-7680.6211 8690.293 -7680.5591 8690.3789 -7680.4985 8690.4629 C
-7680.5029 8690.3369 -7680.7871 8690.541 -7680.7456 8690.2969 C
f
-7677.4893 8690.7207 m
-7677.4111 8690.709 -7677.2417 8690.5879 -7677.1689 8690.75 C
-7677.2505 8690.6367 -7677.5498 8690.9346 -7677.4893 8690.7207 C
f
-7675.9761 8690.5 m
-7675.9272 8690.5098 -7675.9072 8690.5361 -7675.8506 8690.4961 C
-7675.7607 8690.5625 -7675.8555 8690.6689 -7675.9312 8690.6826 C
-7675.9761 8690.5 L
f
-7648.4287 8689.9141 m
-7648.5923 8689.9863 L
-7648.5684 8689.8418 L
-7648.4287 8689.9141 L
f
-7636.3574 8689.9063 m
-7636.1943 8689.8145 -7636.2441 8690.043 -7636.2168 8690.0645 C
-7636.3643 8690.0801 -7636.1621 8689.8848 -7636.3574 8689.9063 C
f
-7629.8486 8689.1777 m
-7629.8984 8689.1816 L
-7629.8818 8688.8828 L
-7629.8486 8689.1777 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7673 8691 m
-7691 8691 L
-7691 8673 L
-7673 8673 L
-7673 8691 L
n
u
u
0 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7680.5625 8691 m
-7683.4375 8691 L
-7683.4375 8682.5 L
-7683.4375 8681.4316 -7682.5684 8680.5625 -7681.5 8680.5625 C
-7672.9165 8680.5625 L
-7672.9165 8683.4375 L
-7680.5625 8683.4375 L
-7680.5625 8691 L
-7680.5625 8691 L
f
U
u
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
-7681.2998 8691 m
-7682.7002 8691 L
-7682.7002 8682.5 L
-7682.7002 8681.8389 -7682.1621 8681.3008 -7681.5 8681.3008 C
-7672.9165 8681.3008 L
-7672.9165 8682.7002 L
-7681.2998 8682.7002 L
-7681.2998 8691 L
-7681.2998 8691 L
f
U
u
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
-7681.6875 8691 m
-7682.3125 8691 L
-7682.3125 8682.5 L
-7682.3125 8682.0527 -7681.9482 8681.6865 -7681.5 8681.6865 C
-7672.9165 8681.6865 L
-7672.9165 8682.3125 L
-7681.5 8682.3125 L
-7681.6035 8682.3125 -7681.6875 8682.3975 -7681.6875 8682.5 C
-7681.6875 8691 L
-7681.6875 8691 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7664.9727 8691 m
-7664.9727 8664.9717 L
-7691 8664.9717 L
-7691 8691 L
-7664.9727 8691 L
n
0 Ap
0 R
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA
1.125 w-7691 8673.6465 m
-7664.9727 8673.6465 l
S
0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA
-7691 8682.3242 m
-7664.9727 8682.3242 l
S
0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA
0.375 w-7691 8677.9854 m
-7664.9727 8677.9854 l
S
0 O
0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 Xa
1 w-7669.5742 8678.0117 m
-7669.3442 8677.7402 -7669.6914 8677.4541 -7670 8677.2432 c
-7670.1118 8677.166 -7670.5215 8677.3789 -7670.7466 8677.2129 c
-7671.0439 8676.9951 -7671.1826 8676.9082 -7671.4824 8676.9141 c
-7671.6455 8676.918 -7672.0435 8677.0479 -7672.1895 8677.0781 c
-7672.5679 8677.1543 -7672.8022 8677.3516 -7673.3672 8677.2549 c
-7673.7344 8677.1914 -7673.8286 8677.1006 -7673.9233 8677.1484 c
-7674.1118 8677.29 -7674.2202 8677.5137 -7674.4258 8677.5625 c
-7674.9575 8677.6895 -7675.3535 8677.7334 -7675.8818 8677.7227 c
-7676.3047 8677.7129 -7677.4185 8677.7813 -7678.2866 8677.6816 c
-7678.6226 8677.6416 -7678.6025 8677.2168 -7678.7695 8677.2129 c
-7678.8618 8677.2109 -7678.7646 8677.5264 -7678.8306 8677.5469 c
-7679.1694 8677.6533 -7679.4702 8676.5029 -7679.6943 8676.5723 c
-7679.8047 8676.6074 -7679.5562 8677.1533 -7679.6729 8677.1816 c
-7679.8975 8677.2373 -7680.2178 8676.2188 -7680.4321 8676.2813 c
-7680.5635 8676.3184 -7680.2886 8676.7383 -7680.4375 8676.8066 c
-7680.6655 8676.9111 -7680.9087 8676.0352 -7681.1064 8676.1338 C
-7681.1543 8676.1816 -7680.7295 8676.9375 -7681.1685 8676.8789 c
-7681.2871 8676.8613 -7681.5054 8676.3135 -7681.5801 8676.3398 c
-7681.6919 8676.3799 -7681.3535 8676.8018 -7681.4897 8676.9277 C
-7681.7681 8677.1543 -7682.3711 8676.1631 -7682.4575 8676.2344 c
-7682.5791 8676.3359 -7682.1279 8677.0977 -7682.2695 8677.166 C
-7682.4497 8677.4297 -7683.0142 8676.5527 -7683.0889 8676.6016 c
-7683.1777 8676.6602 -7682.9058 8677.0381 -7682.8799 8677.2334 c
-7682.8545 8677.4277 -7682.9966 8677.5615 -7683.2144 8677.5098 c
-7683.4736 8677.4473 -7683.8696 8676.6416 -7683.9727 8676.7354 C
-7684.0791 8676.791 -7683.8682 8677.0781 -7683.7954 8677.3125 c
-7683.7583 8677.4277 -7683.8882 8677.6016 -7684.0298 8677.6016 c
-7684.3135 8677.6494 -7684.6255 8676.998 -7684.7065 8677.1025 c
-7684.7524 8677.1621 -7684.5898 8677.4902 -7684.7295 8677.5879 c
-7684.8994 8677.7061 -7685.3115 8677.2383 -7685.4521 8677.293 C
-7685.5361 8677.3418 -7685.4126 8677.5967 -7685.4927 8677.6533 c
-7685.7295 8677.8193 -7686.0039 8677.4209 -7686.0513 8677.4688 C
-7686.1167 8677.4912 -7686.1201 8677.5361 -7686.2793 8677.6406 c
-7686.4736 8677.7676 -7686.5254 8677.8486 -7686.5425 8677.9648 c
-7686.5654 8678.083 -7686.3135 8678.375 -7686.1655 8678.3496 c
-7685.8223 8678.29 -7685.8662 8678.8496 -7685.6328 8678.7158 c
-7685.5679 8678.6797 -7685.6592 8678.2588 -7685.4199 8678.2656 c
-7685.0488 8678.2783 -7684.9858 8678.8213 -7684.7817 8678.8105 c
-7684.6406 8678.8037 -7684.8521 8678.1836 -7684.6328 8678.2607 c
-7684.4751 8678.3164 -7684.0063 8679.3018 -7683.9795 8679.21 c
-7683.8975 8678.9424 -7684.0703 8678.3984 -7683.9409 8678.4082 c
-7683.7568 8678.4229 -7683.5078 8679.3174 -7683.2544 8679.4375 c
-7683.1826 8679.4727 -7683.3774 8678.6006 -7683.1958 8678.5967 C
-7683.0898 8678.6465 -7682.7578 8679.4492 -7682.6274 8679.498 C
-7682.5591 8679.4824 -7682.5879 8679.125 -7682.5176 8679.1045 c
-7682.4688 8679.0898 -7682.2817 8679.5654 -7682.21 8679.5234 c
-7682.1055 8679.4629 -7682.2471 8678.9922 -7682.0889 8678.9229 c
-7681.9175 8678.8486 -7681.4878 8679.8926 -7681.3486 8679.7979 c
-7681.2769 8679.75 -7681.3574 8679.21 -7681.21 8679.2461 c
-7681.0718 8679.2783 -7680.9414 8679.6143 -7680.8081 8679.6426 c
-7680.7295 8679.6582 -7680.7935 8679.1914 -7680.7495 8679.1738 c
-7680.5889 8679.1152 -7680.2329 8679.6719 -7680.0688 8679.5234 c
-7679.8584 8679.335 -7679.9395 8678.9697 -7679.8345 8678.9824 c
-7679.6274 8679.0059 -7679.4912 8679.2432 -7679.4146 8679.1836 c
-7679.2642 8679.0684 -7679.3281 8678.7793 -7679.0527 8678.6924 c
-7678.8975 8678.6426 -7678.7935 8678.9346 -7678.7495 8678.9307 c
-7678.6738 8678.9277 -7678.6782 8678.8301 -7678.6665 8678.7246 c
-7678.6328 8678.4609 -7678.6064 8678.3994 -7678.4878 8678.377 c
-7678.0854 8678.3535 -7677.5625 8678.2842 -7677.1807 8678.2754 c
-7676.6274 8678.2607 -7675.2607 8678.2373 -7675.1182 8678.2373 c
-7675 8678.2129 -7674.7432 8678.3945 -7674.6689 8678.4609 c
-7674.4678 8678.6455 -7674.2998 8678.8594 -7673.9858 8679.1201 c
-7673.8906 8679.2012 -7673.8081 8679.1807 -7673.7378 8679.1563 c
-7673.5249 8679.085 -7673.4585 8679.0332 -7673.2202 8679.002 c
-7672.9175 8678.959 -7672.4272 8679.0488 -7672.1245 8679.1426 c
-7671.6035 8679.3018 -7671.5264 8679.3242 -7671.0977 8679.2754 c
-7670.6992 8679.2295 -7670.0586 8679.1582 -7670.0479 8678.8105 c
-7670.0415 8678.5957 -7669.9414 8678.4434 -7669.5742 8678.0117 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7664.9722 8691 m
-7664.9722 8664.9727 L
-7691 8664.9727 L
-7691 8691 L
-7664.9722 8691 L
n
0 Ap
0 R
0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA
0.375 w-7673.6455 8677.9893 m
-7664.9736 8677.9893 l
S
-7677.9839 8691 m
-7677.9839 8682.3242 l
S
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA
1.125 w-7673.7202 8673.6504 m
-7664.9727 8673.6504 l
S
-7682.3232 8690.999 m
-7682.3232 8681.6455 l
S
0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA
-7673.6504 8690.999 m
-7673.6504 8688.5869 l
-7670.9937 8688.3633 -7669.3096 8686.6602 v
-7667.6064 8684.9336 -7667.3774 8682.3281 y
-7664.9727 8682.3281 l
S
*u
1 D
0 O
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 Xa
1 w-7681.8418 8675.1855 m
-7681.8418 8675.25 -7681.8218 8675.291 -7681.7783 8675.291 c
-7681.6943 8675.291 -7681.4634 8674.9541 -7681.3994 8674.9541 c
-7681.3154 8674.9541 -7681.2729 8674.9961 -7681.2729 8675.1016 c
-7681.2729 8675.1855 -7681.5264 8676.0928 y
-7681.5264 8676.1338 -7681.5264 8676.1338 -7681.5049 8676.1338 c
-7681.4414 8676.1338 -7681.0615 8675.5869 -7680.9351 8675.5869 c
-7680.9146 8675.5869 -7680.8936 8675.6074 -7680.8936 8675.6289 c
-7681.1675 8676.5352 -7681.1675 8676.7256 v
-7681.1675 8676.7891 -7681.1675 8676.8105 -7681.1465 8676.8105 c
-7681.1055 8676.8105 -7680.6826 8676.2402 -7680.5562 8676.2402 c
-7680.5352 8676.2402 -7680.5137 8676.2607 -7680.5137 8676.2822 c
-7680.5137 8676.3457 -7680.7666 8677.084 -7680.7666 8677.252 c
-7680.7666 8677.2949 -7680.7666 8677.2949 -7680.7446 8677.2949 c
-7680.6826 8677.2949 -7680.4722 8677.084 -7680.4297 8677.084 c
-7680.4082 8677.084 -7680.3882 8677.1055 -7680.3882 8677.126 c
-7680.3882 8677.1465 -7680.4927 8677.5059 -7680.4927 8677.5898 c
-7680.4927 8677.6113 -7680.4927 8677.6113 -7680.4722 8677.6113 c
-7680.4297 8677.6113 -7680.0918 8677.252 -7680.0078 8677.252 c
-7679.9658 8677.252 -7679.9233 8677.2949 -7679.9233 8677.3789 c
-7679.9233 8677.5273 -7680.1138 8678.2441 -7680.1138 8678.2861 c
-7680.1138 8678.3701 -7680.0918 8678.4121 -7680.0498 8678.4121 c
-7679.9658 8678.4121 -7679.7119 8678.0957 -7679.6494 8678.0957 c
-7679.5854 8678.0957 -7679.5439 8678.1162 -7679.5439 8678.1807 c
-7679.5854 8678.6016 L
-7679.5854 8678.666 -7679.5854 8678.6855 -7679.5654 8678.6855 c
-7679.5225 8678.6855 -7679.2915 8678.3916 -7679.2065 8678.3916 c
-7679.1006 8678.3916 -7679.1006 8678.877 -7679.1006 8678.9395 c
-7679.1006 8679.0449 -7679.0166 8679.1289 -7678.8896 8679.1289 c
-7678.8057 8679.1289 -7678.4678 8678.8975 -7678.4473 8678.8975 c
-7678.3623 8678.8975 -7678.3198 8679.3398 -7678.2568 8679.3398 c
-7678.1943 8679.3398 -7677.9199 8679.2129 -7677.8564 8679.2129 c
-7677.6455 8679.2129 -7677.6035 8679.2988 -7677.6035 8679.4668 c
-7677.6255 8679.6143 L
-7677.6255 8679.6563 -7677.6035 8679.6563 -7677.5835 8679.6563 c
-7677.4985 8679.6563 -7677.2241 8679.3818 -7677.1392 8679.3818 c
-7676.9287 8679.3818 -7674.8198 8681.4492 -7674.5454 8681.7227 c
-7674.3984 8681.8906 -7674.3984 8682.1865 -7674.3984 8682.3135 c
-7674.3984 8683.1777 -7674.3984 8683.2617 -7674.2295 8683.3457 c
-7673.5977 8683.5996 -7673.5127 8683.7471 -7672.7334 8685.0332 c
-7672.6479 8685.1807 -7671.7407 8685.793 -7671.5942 8685.793 c
-7671.4878 8685.793 -7671.1094 8685.5391 -7671.0239 8685.5391 c
-7670.9194 8685.5391 -7670.8135 8685.6025 -7670.8135 8685.7705 c
-7670.8135 8686.2139 -7671.3408 8686.7207 -7671.9312 8686.7207 c
-7672.7534 8686.7207 -7673.0913 8686.0234 -7673.1338 8685.625 c
-7673.1543 8685.4766 -7673.2393 8685.3916 -7673.3447 8685.3916 c
-7673.3862 8685.3916 -7673.4287 8685.4121 -7673.4702 8685.4766 c
-7673.9561 8686.2773 -7674.9473 8686.7207 -7675.7065 8686.7207 c
-7676.7393 8686.7207 -7677.8774 8686.0879 -7678.3418 8685.8145 c
-7678.7842 8685.5615 -7679.4814 8685.3916 -7679.8809 8685.3916 c
-7680.3242 8685.3916 -7680.3662 8685.5391 -7680.3662 8685.793 c
-7680.3662 8685.9404 -7679.9023 8686.3818 -7679.9023 8686.5098 c
-7679.9023 8686.6357 -7680.0498 8686.7207 -7680.4082 8686.7207 c
-7680.8936 8686.7207 -7681.5679 8686.0029 -7681.5679 8685.2236 c
-7681.5679 8684.6113 -7680.7666 8684.085 -7680.3022 8684.085 c
-7679.3755 8684.085 -7679.0942 8684.4434 -7678.5264 8684.9072 c
-7678.4414 8684.9697 -7678.3774 8684.9922 -7678.3359 8684.9922 c
-7678.1895 8684.9922 -7678.1895 8683.8945 -7678.1895 8683.7695 c
-7678.1895 8683.6201 -7678.2729 8683.5576 -7678.3774 8683.5576 c
-7680.7822 8683.5576 -7685.6592 8682.334 -7687.3672 8676.1777 c
-7687.4297 8675.9658 -7687.5361 8675.8613 -7687.6406 8675.8613 c
-7687.7881 8675.8613 -7688.7793 8676.7041 -7688.7793 8678.2861 c
-7688.7793 8680.1201 -7687.5767 8681.0898 -7686.9873 8681.0898 c
-7686.8398 8681.0898 -7686.6494 8681.0693 -7686.6494 8680.9209 c
-7686.6494 8680.8584 -7686.6929 8680.7949 -7686.7759 8680.6895 c
-7687.1143 8680.3535 -7687.3672 8679.7197 -7687.3672 8679.4033 c
-7687.3672 8679.1914 -7687.2607 8679.0234 -7687.1143 8679.0234 c
-7686.9033 8679.0234 -7686.5654 8679.9727 -7686.46 8680.1201 c
-7686.3335 8680.3311 -7685.9546 8680.7109 -7685.2378 8681.2383 c
-7684.4995 8681.7637 -7683.0654 8683.0723 -7683.0654 8684.3369 c
-7683.0654 8685.709 -7684.1191 8686.6152 -7684.9209 8686.6152 c
-7685.7007 8686.6152 -7686.6714 8686.0879 -7687.0713 8685.6025 c
-7687.7041 8684.8652 -7688.3154 8684.2949 -7688.8218 8684.2949 c
-7689.1592 8684.2949 -7689.3066 8684.5059 -7689.3066 8684.7168 c
-7689.3066 8685.0537 -7689.0537 8685.2861 -7688.5479 8685.3281 c
-7687.9575 8685.3711 -7687.8936 8685.793 -7687.8936 8686.1289 c
-7687.8936 8686.4033 -7688.4209 8686.7207 -7688.8433 8686.7207 c
-7689.4751 8686.7207 -7690.2974 8686.0234 -7690.2974 8684.1904 c
-7690.2974 8682.6924 -7689.0537 8682.2295 -7688.5679 8682.2295 c
-7688.1265 8682.2295 -7687.4722 8682.3135 -7687.0928 8682.6504 c
-7685.8066 8683.8535 -7685.1318 8684.0625 -7684.5835 8684.0625 c
-7684.3721 8684.0625 -7684.2881 8684.0625 -7684.2881 8684.2109 c
-7684.2881 8684.5273 -7685.0474 8684.7168 -7685.1318 8684.7383 c
-7685.3423 8684.8008 -7685.5103 8685.0332 -7685.5103 8685.2441 c
-7685.5103 8685.7295 -7685.2378 8685.75 -7684.8774 8685.75 c
-7684.5215 8685.75 -7683.8042 8685.3916 -7683.8042 8684.1904 c
-7683.8042 8683.1992 -7684.9424 8682.0391 -7685.4058 8681.8076 c
-7685.7007 8681.6377 -7686.5874 8681.6602 -7686.9458 8681.6172 c
-7687.6406 8681.5322 -7689.4121 8680.585 -7689.4121 8678.0957 c
-7689.4336 8676.6826 -7688.1265 8675.3555 -7687.8511 8675.166 c
-7687.6826 8675.0586 -7687.5986 8674.9326 -7687.5986 8674.7637 c
-7687.5986 8674.5527 -7687.6626 8671.6221 -7687.9995 8671.6221 c
-7688.4424 8671.6221 -7688.5054 8671.6221 -7688.5054 8671.8135 c
-7688.21 8672.9082 -7688.21 8673.1406 v
-7688.21 8673.457 -7688.4424 8674.9326 -7689.3066 8674.9326 c
-7689.5806 8674.9326 -7690.0449 8674.7002 -7690.0449 8674.3848 c
-7690.0449 8674.0898 -7689.3486 8672.8877 -7689.3486 8672.6133 c
-7689.3486 8672.1279 -7689.3921 8672.1074 -7690.0654 8671.4961 c
-7690.2559 8671.3486 -7690.3193 8671.2227 -7690.3193 8671.0313 c
-7690.3193 8670.8633 -7690.2134 8670.7354 -7690.0449 8670.7354 c
-7689.8975 8670.7354 -7689.3281 8671.0117 -7689.2017 8671.0313 c
-7689.0752 8671.0313 -7688.8433 8671.0527 -7688.6538 8671.0527 c
-7688.2734 8671.0527 -7688.0845 8670.9258 -7688.0845 8670.7998 c
-7688.0845 8670.5674 -7688.0845 8669.8936 -7688.9263 8668.4375 c
-7689.1167 8668.1006 -7690.2974 8666.7725 -7690.2974 8666.4346 c
-7690.2974 8666.2656 -7690.2134 8666.2461 -7690.1089 8666.2461 c
-7689.9185 8666.2461 -7689.4966 8666.667 -7689.3706 8666.8145 c
-7688.1265 8668.1426 -7687.3042 8669.5762 -7686.9238 8670.8418 c
-7686.8398 8671.1582 -7686.7344 8671.0742 -7686.5654 8671.0957 c
-7684.4155 8671.6016 -7682.3271 8674.1104 -7682.3271 8674.1318 c
-7682.4326 8674.4053 -7682.4326 8674.4688 v
-7682.4326 8674.5957 -7682.3271 8674.6172 -7682.3057 8674.6172 c
-7682.2432 8674.6172 -7682.0527 8674.4053 -7682.0103 8674.4053 c
-7681.9058 8674.4053 -7681.7783 8674.4902 -7681.7783 8674.6377 C
-7681.8418 8675.1855 l
f
0 D
-7685.1104 8673.6895 m
-7684.5215 8673.6895 -7684.0986 8673.7949 -7683.6982 8674.0684 c
-7683.6553 8674.0898 -7683.6138 8674.1104 -7683.5928 8674.1104 c
-7683.5498 8674.1104 -7683.5498 8674.0898 -7683.5498 8674.0469 c
-7683.5498 8673.626 -7685.4272 8671.666 -7686.5654 8671.666 c
-7686.6289 8671.666 -7686.6714 8671.707 -7686.6714 8671.7695 c
-7686.6714 8671.96 -7686.5874 8673.9629 -7686.2495 8673.9629 c
-7686.1865 8673.9629 -7686.1016 8673.9414 -7686.0386 8673.9004 c
-7685.7007 8673.752 -7685.4902 8673.6895 -7685.1104 8673.6895 c
f
-7684.5835 8676.4512 m
-7684.5835 8676.0293 -7684.5625 8675.5654 -7683.8662 8675.5654 c
-7683.2334 8675.5654 -7682.6431 8676.2197 -7682.4961 8676.3672 c
-7682.4326 8676.4092 -7682.3906 8676.4297 -7682.3486 8676.4297 c
-7682.3271 8676.4297 -7682.2847 8676.3877 -7682.2847 8676.3457 c
-7682.2847 8675.9023 -7683.6553 8674.2373 -7685.0049 8674.2373 c
-7685.2578 8674.2373 -7686.2705 8674.4053 -7686.2705 8674.9541 c
-7686.2705 8675.207 -7685.8906 8676.5781 -7685.2793 8677.6533 c
-7683.9087 8680.1416 -7679.7119 8681.7002 -7677.8145 8681.7002 c
-7676.9072 8681.7227 -7676.6118 8681.4063 -7676.4863 8681.3848 c
-7676.4648 8681.3848 -7676.4438 8681.3643 -7676.4233 8681.3643 c
-7676.3174 8681.3643 -7676.1904 8681.4277 -7676.1904 8681.5752 c
-7676.1904 8681.5967 -7676.2119 8681.5967 v
-7676.3594 8682.7344 -7676.4014 8683.1357 -7676.4014 8684.3994 c
-7676.4014 8685.793 -7676.4014 8685.9189 -7675.4321 8685.9189 c
-7674.1455 8685.9189 -7673.8506 8684.8438 -7673.8506 8684.6113 c
-7673.8506 8684.1904 -7674.4399 8683.8945 -7674.5889 8683.8945 c
-7674.7358 8683.8945 -7674.9058 8684.002 -7674.9058 8684.1904 c
-7674.9058 8684.4854 -7674.9473 8684.6328 -7675.2207 8684.6328 c
-7675.4951 8684.6328 -7675.4951 8684.2744 -7675.4951 8684.168 c
-7675.4951 8683.916 -7675.3896 8683.6631 -7675.1782 8683.5361 c
-7674.7998 8683.2832 -7674.7998 8682.8828 -7674.7998 8682.6719 c
-7674.7998 8682.5664 -7674.7998 8682.4395 -7674.8198 8682.334 c
-7674.8418 8682.166 -7676.7817 8680.1201 -7677.0977 8680.1201 c
-7677.2446 8680.1201 -7677.5615 8680.2666 -7678.4258 8680.2666 c
-7680.5767 8680.2666 -7681.5474 8678.5391 -7681.7378 8678.0117 c
-7681.9897 8677.2949 -7682.7915 8676.999 -7683.0225 8676.999 c
-7683.2129 8676.999 -7683.2129 8677.042 -7683.2129 8677.4424 c
-7683.2129 8677.5273 -7683.4238 8677.8633 y
-7683.4238 8678.0537 -7682.3906 8678.3066 -7682.3906 8678.4961 c
-7682.3906 8678.666 -7682.5801 8678.6855 -7682.7271 8678.6855 c
-7682.8115 8678.6855 -7683.8882 8678.6855 -7684.3306 8677.8633 c
-7684.5415 8677.4629 -7684.5835 8676.8945 -7684.5835 8676.4512 c
f
1 D
-7680.4927 8674.1953 m
-7680.4927 8674.1514 -7680.5137 8674.1318 -7680.5352 8674.1318 c
-7680.5986 8674.1318 -7680.7666 8674.4688 -7680.8506 8674.4688 c
-7680.9146 8674.4688 -7680.9995 8674.3848 -7681.0415 8674.2783 c
-7681.0615 8674.1953 -7681.1255 8673.7305 -7681.21 8673.7305 c
-7681.2524 8673.7305 -7681.4209 8673.9629 -7681.4634 8673.9629 c
-7681.6104 8673.9629 -7681.7158 8673.7305 -7681.7158 8673.5215 c
-7681.7158 8673.415 -7681.7783 8673.415 -7681.9263 8673.415 c
-7682.5166 8673.415 -7684.1406 8671.2432 -7684.5625 8669.4922 c
-7684.6055 8669.3242 -7684.5835 8669.1768 -7684.8994 8669.0703 c
-7687.0713 8668.334 -7689.5176 8666.1816 -7689.5176 8666.0557 c
-7689.5176 8665.9082 -7689.4336 8665.8242 -7689.3066 8665.8242 c
-7689.2432 8665.8242 -7689.1592 8665.8242 -7688.6538 8666.1602 c
-7687.7681 8666.751 -7685.7217 8668.0381 -7684.8994 8668.0381 c
-7684.6265 8668.0381 -7684.6055 8667.6797 -7684.6055 8667.4258 c
-7684.6055 8667.2354 -7684.6265 8667.0039 -7684.6265 8666.8574 c
-7684.6465 8666.583 -7684.9634 8666.2656 -7684.9634 8666.0977 c
-7684.9634 8665.9502 -7684.8154 8665.8447 -7684.6465 8665.8447 c
-7684.4575 8665.8447 -7684.3306 8665.8662 -7684.1606 8666.0557 c
-7683.8662 8666.3926 -7683.7402 8666.541 -7683.4238 8666.541 c
-7683.1914 8666.541 -7682.1377 8665.8242 -7681.8838 8665.8242 c
-7681.5679 8665.8242 -7681.1895 8666.3086 -7681.1895 8666.6045 c
-7681.1895 8667.3418 -7682.0942 8667.9326 -7682.6431 8667.9326 c
-7683.0225 8667.9326 -7683.4438 8667.8066 -7683.6353 8667.5742 c
-7683.6982 8667.5098 -7683.7607 8667.4688 -7683.8242 8667.4688 c
-7683.9937 8667.4688 -7684.1191 8667.9326 -7684.1191 8667.9746 c
-7684.1191 8668.3975 -7681.2729 8668.459 -7680.9146 8668.459 c
-7680.7666 8668.459 -7680.6401 8668.375 -7680.5352 8668.2061 c
-7680.3447 8667.9121 -7679.1855 8666.6895 -7677.6255 8666.6895 c
-7675.79 8666.6895 -7674.0825 8667.9521 -7674.0825 8669.8506 c
-7674.0825 8669.957 -7674.1245 8670.5039 -7674.1245 8670.5264 c
-7674.1245 8670.5898 -7673.0063 8672.3389 -7671.6782 8672.3389 c
-7670.6245 8672.3389 -7670.2656 8671.75 -7670.2656 8671.2637 c
-7670.2656 8671.0313 -7670.3711 8670.3789 -7670.8984 8670.3789 c
-7671.1094 8670.3789 -7671.2144 8670.5898 -7671.2144 8670.9688 c
-7671.2144 8671.0527 -7671.0039 8671.4326 -7671.0039 8671.5381 c
-7671.0039 8671.5801 -7671.0239 8671.6016 -7671.0879 8671.6016 c
-7671.4258 8671.6016 -7671.9521 8671.2432 -7672.1846 8670.5898 c
-7672.4595 8669.873 -7672.8594 8669.1768 -7673.1958 8668.7754 c
-7673.5127 8668.418 -7673.6182 8667.8262 -7673.6182 8667.4893 c
-7673.6182 8667.0039 -7673.1338 8665.8447 -7671.4878 8665.8447 c
-7670.2871 8665.8447 -7669.4434 8666.583 -7669.4434 8667.1943 c
-7669.4434 8667.8066 -7669.7598 8668.1855 -7670.2026 8668.1855 c
-7670.6455 8668.1855 -7670.9824 8667.8477 -7670.9824 8667.5098 c
-7670.9824 8666.8359 -7671.1514 8666.6895 -7671.4878 8666.6895 c
-7671.6992 8666.6895 -7671.8896 8666.8145 -7671.8896 8667.1309 c
-7671.8896 8667.3633 -7671.8896 8667.7422 -7670.3711 8669.0078 c
-7669.8857 8669.4082 -7669.4214 8670.1055 -7669.4214 8670.8848 c
-7669.4214 8671.6445 -7670.4561 8672.8447 -7671.6362 8672.8447 c
-7672.8594 8672.8447 -7673.6401 8672.0654 -7674.2515 8671.3486 c
-7674.5454 8671.0117 -7675.9814 8669.3242 -7676.0439 8669.3018 c
-7676.2334 8669.1543 -7676.3174 8669.0293 -7676.3174 8668.9023 c
-7676.3174 8668.7969 -7676.2119 8668.6914 -7676.0854 8668.6914 c
-7675.8535 8668.6914 -7674.9058 8669.6406 -7674.8198 8669.6406 c
-7674.7568 8669.6406 -7674.7153 8669.5762 -7674.7153 8669.4922 c
-7674.7153 8668.7334 -7675.8535 8667.2578 -7677.6255 8667.2578 c
-7679.1006 8667.2578 -7679.9863 8668.375 -7679.9863 8668.418 c
-7679.9863 8668.5439 -7679.8394 8668.6689 -7679.5225 8668.7334 c
-7675.6426 8669.4717 -7672.3955 8673.0215 -7672.3955 8677.6377 c
-7672.3955 8677.7441 -7672.2256 8677.7705 -7672.0786 8677.7705 c
-7671.7202 8677.7705 -7671.0879 8677.8496 -7671.0879 8677.5762 c
-7671.0879 8677.4697 -7671.1294 8677.3438 -7671.1934 8677.2168 c
-7671.5518 8676.6465 -7671.8682 8676.4727 -7671.8682 8675.5215 c
-7671.8682 8675.0586 -7671.4878 8674.5322 -7670.8984 8674.5322 c
-7669.8657 8674.5322 -7669.4214 8675.5654 -7669.4214 8675.7969 c
-7669.4214 8675.9658 -7669.5073 8676.0293 -7669.5903 8676.0293 c
-7669.7178 8676.0293 -7670.2241 8675.502 -7670.3711 8675.502 c
-7670.5615 8675.502 -7670.7085 8675.5439 -7670.7085 8676.0293 c
-7670.7085 8676.3672 -7669.4214 8680.0781 -7669.4214 8680.8789 c
-7669.4214 8681.4492 -7669.7598 8682.1455 -7670.6455 8682.6504 c
-7670.6875 8682.6719 -7670.7085 8682.6924 -7670.7085 8682.7344 c
-7670.7085 8682.8184 -7670.5615 8682.9248 -7670.4126 8682.9658 c
-7669.8018 8683.1357 -7669.4214 8683.2412 -7669.4214 8684.1904 c
-7669.4214 8684.5488 -7669.7598 8685.2236 -7670.0127 8685.2236 c
-7670.2026 8685.2236 -7670.2026 8685.1807 -7670.2026 8684.8223 c
-7670.2026 8684.6748 -7670.2446 8684.5693 -7670.3926 8684.4639 c
-7670.7085 8684.2529 -7670.7295 8684.2109 -7670.8135 8683.7266 c
-7670.8774 8683.4102 -7671.0039 8683.3242 -7672.1426 8682.6924 c
-7672.5854 8682.4189 -7672.6904 8682.1865 -7672.7744 8681.9551 c
-7672.8594 8681.7637 -7672.9233 8681.7637 -7673.4287 8681.7637 c
-7673.9561 8681.7637 -7676.5073 8679.0449 -7676.5073 8678.918 c
-7676.5073 8678.8555 -7676.3809 8678.5596 -7676.3809 8678.4961 c
-7676.3809 8678.4336 -7676.4014 8678.3916 -7676.4438 8678.3916 c
-7676.4863 8678.3916 -7676.6338 8678.6016 -7676.6758 8678.6016 c
-7676.7817 8678.6016 -7676.7817 8678.4121 -7676.7817 8678.2637 c
-7676.7817 8678.1602 -7676.5703 8677.5898 -7676.5703 8677.4424 c
-7676.5703 8677.3584 -7676.5918 8677.2949 -7676.6338 8677.2949 c
-7676.7178 8677.2949 -7676.9072 8677.7578 -7676.9922 8677.7578 c
-7677.0342 8677.7578 -7677.0762 8677.7168 -7677.0762 8677.5898 c
-7677.0762 8677.4424 -7676.8862 8676.7256 y
-7676.8862 8676.6621 -7676.9072 8676.5566 -7676.9502 8676.5566 c
-7677.0342 8676.5566 -7677.1826 8676.957 -7677.2666 8676.957 c
-7677.3286 8676.957 -7677.3926 8676.873 -7677.3926 8676.7256 c
-7677.3926 8676.6406 -7677.2446 8676.2197 -7677.2446 8676.1143 c
-7677.2446 8676.0508 -7677.2666 8675.9863 -7677.3086 8675.9863 c
-7677.3506 8675.9863 -7677.5835 8676.5996 -7677.7095 8676.5996 c
-7677.7935 8676.5996 -7677.8994 8676.4922 -7677.8994 8676.3877 c
-7677.8994 8676.3037 -7677.7729 8675.9453 -7677.7729 8675.8613 c
-7677.7729 8675.8184 -7677.7729 8675.7969 -7677.7935 8675.7969 c
-7677.8774 8675.7969 -7678.0254 8676.2822 -7678.1104 8676.2822 c
-7678.3418 8676.2822 -7678.3623 8675.8613 -7678.3623 8675.6709 c
-7678.3623 8675.5869 -7678.2998 8675.25 -7678.2998 8675.1855 c
-7678.2998 8675.123 -7678.3198 8675.1016 -7678.3418 8675.1016 c
-7678.4897 8675.1016 -7678.6782 8675.9023 -7678.8271 8675.9023 c
-7679.0386 8675.9023 -7679.0386 8675.7129 -7679.0386 8675.4814 c
-7679.0166 8674.9541 L
-7679.0166 8674.9326 -7679.0386 8674.9121 y
-7679.0586 8674.9121 -7679.1006 8674.9326 -7679.1226 8674.9961 c
-7679.1855 8675.207 -7679.3115 8675.6289 -7679.5225 8675.6289 c
-7679.6694 8675.6289 -7679.8174 8675.46 -7679.8174 8675.3135 c
-7679.8174 8675.0801 -7679.7119 8674.7002 -7679.7119 8674.4688 c
-7679.7119 8674.4053 -7679.7334 8674.3848 -7679.7754 8674.3848 c
-7679.8608 8674.3848 -7679.9863 8674.8262 -7680.0278 8674.9121 c
-7680.0918 8674.9961 -7680.1553 8675.0176 -7680.2192 8675.0176 c
-7680.5352 8675.0176 -7680.5352 8674.7002 -7680.5352 8674.5527 C
-7680.4927 8674.1953 l
f
0 D
-7681.8633 8669.8301 m
-7681.8633 8669.5977 -7683.8042 8669.4082 -7683.8662 8669.4082 c
-7683.9722 8669.4082 -7684.0352 8669.4717 -7684.0352 8669.5762 c
-7684.0352 8670.4414 -7682.2847 8672.6768 -7681.8633 8672.6768 c
-7681.7998 8672.6768 -7681.7783 8672.6563 -7681.7783 8672.5928 c
-7682.2002 8671.3486 -7682.2002 8671.0957 v
-7682.2002 8670.7158 -7682.0942 8670.4629 -7681.9058 8670.041 c
-7681.8838 8669.957 -7681.8633 8669.8936 -7681.8633 8669.8301 c
f
-7673.1338 8681.2793 m
-7672.9858 8681.2793 -7672.4795 8680.7744 -7672.3325 8680.7744 c
-7672.2065 8680.7744 -7672.0791 8680.8584 -7672.0791 8681.0059 c
-7672.0791 8681.0898 -7672.2695 8681.5322 -7672.2695 8681.6377 c
-7672.2695 8681.9961 -7671.8896 8682.293 -7671.5098 8682.293 c
-7671.1094 8682.293 -7669.9702 8681.9756 -7669.9702 8680.752 c
-7669.9702 8679.6563 -7670.3926 8679.6563 -7672.0366 8679.6563 c
-7672.3955 8679.6563 -7674.0615 8679.8457 -7674.3145 8679.8457 c
-7674.4399 8679.8457 -7674.4834 8679.6768 -7674.4834 8679.5498 c
-7674.4834 8679.5088 -7674.4834 8679.4668 -7674.4614 8679.4453 c
-7674.3984 8679.0664 -7674.1675 8678.5176 -7674.1675 8678.1377 c
-7674.1675 8673.6895 -7678.2998 8669.8301 -7680.7666 8669.8301 c
-7681.4209 8669.8301 -7681.6519 8670.6318 -7681.6519 8671.0527 c
-7681.6519 8672.7822 -7679.6694 8673.8145 -7679.4175 8673.8145 c
-7679.3545 8673.8145 -7679.3335 8673.7949 -7679.3335 8673.752 c
-7679.3335 8673.71 -7679.3545 8673.668 -7679.3975 8673.626 c
-7679.5225 8673.457 -7680.0498 8672.8447 -7680.0498 8672.2129 c
-7680.0498 8671.875 -7679.7554 8671.4326 -7678.9951 8671.4326 c
-7677.7305 8671.4326 -7677.1826 8672.7822 -7677.1826 8673.1406 c
-7677.1826 8673.2891 -7677.2446 8673.499 -7677.4561 8673.499 c
-7677.6035 8673.499 -7678.0049 8672.8447 -7678.1519 8672.8447 c
-7678.2158 8672.8447 -7678.4473 8672.9717 -7678.5103 8672.9717 c
-7678.5942 8672.9717 -7678.6582 8672.9512 -7678.7422 8672.9512 c
-7678.8057 8672.9512 -7678.8481 8673.0137 -7678.8481 8673.1191 c
-7678.8481 8673.4785 -7678.3623 8674.0469 -7677.8774 8674.3008 c
-7676.9722 8674.7637 -7675.6226 8676.0928 -7675.6226 8677.5479 c
-7675.6226 8677.9688 -7675.6846 8678.3701 -7675.6846 8678.707 c
-7675.6846 8679.2559 -7674.7568 8680.1201 -7673.8081 8681.0059 c
-7673.6401 8681.1533 -7673.3862 8681.2793 -7673.1338 8681.2793 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7664.9722 8691 m
-7664.9722 8664.9727 L
-7691 8664.9727 L
-7691 8691 L
-7664.9722 8691 L
n
0 Ap
0 R
0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA
0.375 w-7673.6455 8677.9893 m
-7664.9736 8677.9893 l
S
-7677.9839 8691 m
-7677.9839 8682.3242 l
S
0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA
1.125 w-7673.7202 8673.6504 m
-7664.9727 8673.6504 l
S
-7682.3232 8691 m
-7682.3232 8681.6455 l
S
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA
-7673.6504 8691 m
-7673.6504 8688.5869 l
-7670.9937 8688.3633 -7669.3096 8686.6602 v
-7667.6064 8684.9336 -7667.3774 8682.3281 y
-7664.9727 8682.3281 l
S
*u
0 O
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 Xa
1 w-7681.7783 8674.6377 m
-7681.7783 8674.4902 -7681.9058 8674.4053 -7682.0103 8674.4053 c
-7682.0527 8674.4053 -7682.2432 8674.6172 -7682.3057 8674.6172 c
-7682.3271 8674.6172 -7682.4326 8674.5957 -7682.4326 8674.4688 c
-7682.4326 8674.4053 -7682.3271 8674.1318 y
-7682.3271 8674.1104 -7684.4155 8671.6016 -7686.5654 8671.0957 c
-7686.7344 8671.0742 -7686.8398 8671.1582 -7686.9238 8670.8418 c
-7687.3042 8669.5762 -7688.1265 8668.1426 -7689.3706 8666.8145 c
-7689.4966 8666.668 -7689.9185 8666.2461 -7690.1089 8666.2461 c
-7690.2134 8666.2461 -7690.2974 8666.2656 -7690.2974 8666.4346 c
-7690.2974 8666.7725 -7689.1167 8668.1006 -7688.9263 8668.4375 c
-7688.0845 8669.8936 -7688.0845 8670.5674 -7688.0845 8670.7998 c
-7688.0845 8670.9258 -7688.2734 8671.0527 -7688.6538 8671.0527 c
-7688.8433 8671.0527 -7689.0752 8671.0313 -7689.2017 8671.0313 c
-7689.3281 8671.0117 -7689.8975 8670.7354 -7690.0449 8670.7354 c
-7690.2134 8670.7354 -7690.3193 8670.8633 -7690.3193 8671.0313 c
-7690.3193 8671.2227 -7690.2559 8671.3486 -7690.0654 8671.4961 c
-7689.3921 8672.1074 -7689.3486 8672.1279 -7689.3486 8672.6133 c
-7689.3486 8672.8877 -7690.0449 8674.0898 -7690.0449 8674.3848 c
-7690.0449 8674.7002 -7689.5806 8674.9326 -7689.3066 8674.9326 c
-7688.4424 8674.9326 -7688.21 8673.457 -7688.21 8673.1406 c
-7688.21 8672.9082 -7688.5054 8671.8135 y
-7688.5054 8671.6221 -7688.4424 8671.6221 -7687.9995 8671.6221 c
-7687.6626 8671.6221 -7687.5986 8674.5527 -7687.5986 8674.7637 c
-7687.5986 8674.9326 -7687.6826 8675.0586 -7687.8511 8675.166 c
-7688.1265 8675.3555 -7689.4336 8676.6826 -7689.4121 8678.0957 c
-7689.4121 8680.585 -7687.6406 8681.5322 -7686.9458 8681.6172 c
-7686.5874 8681.6602 -7685.7007 8681.6377 -7685.4058 8681.8076 c
-7684.9424 8682.0391 -7683.8042 8683.1992 -7683.8042 8684.1904 c
-7683.8042 8685.3916 -7684.5215 8685.75 -7684.8774 8685.75 c
-7685.2378 8685.75 -7685.5103 8685.7295 -7685.5103 8685.2441 c
-7685.5103 8685.0332 -7685.3423 8684.8008 -7685.1318 8684.7383 c
-7685.0474 8684.7168 -7684.2881 8684.5273 -7684.2881 8684.2109 c
-7684.2881 8684.0625 -7684.3721 8684.0625 -7684.5835 8684.0625 c
-7685.1318 8684.0625 -7685.8066 8683.8535 -7687.0928 8682.6504 c
-7687.4722 8682.3135 -7688.1265 8682.2295 -7688.5679 8682.2295 c
-7689.0537 8682.2295 -7690.2974 8682.6924 -7690.2974 8684.1904 c
-7690.2974 8686.0234 -7689.4751 8686.7207 -7688.8433 8686.7207 c
-7688.4209 8686.7207 -7687.8936 8686.4033 -7687.8936 8686.1289 c
-7687.8936 8685.793 -7687.9575 8685.3711 -7688.5479 8685.3281 c
-7689.0537 8685.2861 -7689.3066 8685.0537 -7689.3066 8684.7168 c
-7689.3066 8684.5059 -7689.1592 8684.2949 -7688.8218 8684.2949 c
-7688.3154 8684.2949 -7687.7041 8684.8652 -7687.0713 8685.6025 c
-7686.6714 8686.0879 -7685.7007 8686.6152 -7684.9209 8686.6152 c
-7684.1191 8686.6152 -7683.0654 8685.709 -7683.0654 8684.3369 c
-7683.0654 8683.0723 -7684.4995 8681.7637 -7685.2378 8681.2383 c
-7685.9546 8680.7109 -7686.3335 8680.3311 -7686.46 8680.1201 c
-7686.5654 8679.9727 -7686.9033 8679.0234 -7687.1143 8679.0234 c
-7687.2607 8679.0234 -7687.3672 8679.1914 -7687.3672 8679.4033 c
-7687.3672 8679.7197 -7687.1143 8680.3535 -7686.7759 8680.6895 c
-7686.6929 8680.7949 -7686.6494 8680.8584 -7686.6494 8680.9209 c
-7686.6494 8681.0693 -7686.8398 8681.0898 -7686.9873 8681.0898 c
-7687.5767 8681.0898 -7688.7793 8680.1201 -7688.7793 8678.2861 c
-7688.7793 8676.7041 -7687.7881 8675.8613 -7687.6406 8675.8613 c
-7687.5361 8675.8613 -7687.4297 8675.9658 -7687.3672 8676.1777 c
-7685.6592 8682.334 -7680.7822 8683.5576 -7678.3774 8683.5576 c
-7678.2729 8683.5576 -7678.1895 8683.6201 -7678.1895 8683.7695 c
-7678.1895 8683.8945 -7678.1895 8684.9922 -7678.3359 8684.9922 c
-7678.3774 8684.9922 -7678.4414 8684.9697 -7678.5264 8684.9072 c
-7679.0942 8684.4434 -7679.3755 8684.085 -7680.3022 8684.085 c
-7680.7666 8684.085 -7681.5679 8684.6113 -7681.5679 8685.2236 c
-7681.5679 8686.0029 -7680.8936 8686.7207 -7680.4082 8686.7207 c
-7680.0498 8686.7207 -7679.9023 8686.6357 -7679.9023 8686.5098 c
-7679.9023 8686.3818 -7680.3662 8685.9404 -7680.3662 8685.793 c
-7680.3662 8685.5391 -7680.3242 8685.3916 -7679.8809 8685.3916 c
-7679.4814 8685.3916 -7678.7842 8685.5615 -7678.3418 8685.8145 c
-7677.8774 8686.0879 -7676.7393 8686.7207 -7675.7065 8686.7207 c
-7674.9473 8686.7207 -7673.9561 8686.2773 -7673.4702 8685.4766 c
-7673.4287 8685.4121 -7673.3862 8685.3916 -7673.3447 8685.3916 c
-7673.2393 8685.3916 -7673.1543 8685.4766 -7673.1338 8685.625 c
-7673.0913 8686.0234 -7672.7534 8686.7207 -7671.9312 8686.7207 c
-7671.3408 8686.7207 -7670.8135 8686.2139 -7670.8135 8685.7705 c
-7670.8135 8685.6025 -7670.9194 8685.5391 -7671.0239 8685.5391 c
-7671.1094 8685.5391 -7671.4878 8685.793 -7671.5942 8685.793 c
-7671.7407 8685.793 -7672.6479 8685.1807 -7672.7334 8685.0332 c
-7673.5127 8683.7471 -7673.5977 8683.5996 -7674.2295 8683.3457 c
-7674.3984 8683.2617 -7674.3984 8683.1777 -7674.3984 8682.3135 c
-7674.3984 8682.1865 -7674.3984 8681.8906 -7674.5454 8681.7227 c
-7674.8198 8681.4492 -7676.9287 8679.3818 -7677.1392 8679.3818 c
-7677.2241 8679.3818 -7677.4985 8679.6563 -7677.5835 8679.6563 c
-7677.6035 8679.6563 -7677.6255 8679.6563 -7677.6255 8679.6143 C
-7677.6035 8679.4668 l
-7677.6035 8679.2988 -7677.6455 8679.2129 -7677.8564 8679.2129 c
-7677.9199 8679.2129 -7678.1943 8679.3398 -7678.2568 8679.3398 c
-7678.3198 8679.3398 -7678.3623 8678.8975 -7678.4473 8678.8975 c
-7678.4678 8678.8975 -7678.8057 8679.1289 -7678.8896 8679.1289 c
-7679.0166 8679.1289 -7679.1006 8679.0449 -7679.1006 8678.9395 c
-7679.1006 8678.877 -7679.1006 8678.3916 -7679.2065 8678.3916 c
-7679.2915 8678.3916 -7679.5225 8678.6855 -7679.5654 8678.6855 c
-7679.5854 8678.6855 -7679.5854 8678.666 -7679.5854 8678.6016 C
-7679.5439 8678.1807 l
-7679.5439 8678.1162 -7679.5854 8678.0957 -7679.6494 8678.0957 c
-7679.7119 8678.0957 -7679.9658 8678.4121 -7680.0498 8678.4121 c
-7680.0918 8678.4121 -7680.1138 8678.3701 -7680.1138 8678.2861 c
-7680.1138 8678.2441 -7679.9233 8677.5273 -7679.9233 8677.3789 c
-7679.9233 8677.2949 -7679.9658 8677.252 -7680.0078 8677.252 c
-7680.0918 8677.252 -7680.4297 8677.6113 -7680.4722 8677.6113 c
-7680.4927 8677.6113 -7680.4927 8677.6113 -7680.4927 8677.5898 c
-7680.4927 8677.5059 -7680.3882 8677.1465 -7680.3882 8677.127 c
-7680.3882 8677.1055 -7680.4082 8677.084 -7680.4297 8677.084 c
-7680.4722 8677.084 -7680.6826 8677.2949 -7680.7446 8677.2949 c
-7680.7666 8677.2949 -7680.7666 8677.2949 -7680.7666 8677.252 c
-7680.7666 8677.084 -7680.5137 8676.3457 -7680.5137 8676.2822 c
-7680.5137 8676.2607 -7680.5352 8676.2402 -7680.5562 8676.2402 c
-7680.6826 8676.2402 -7681.1055 8676.8105 -7681.1465 8676.8105 c
-7681.1675 8676.8105 -7681.1675 8676.7891 -7681.1675 8676.7256 c
-7681.1675 8676.5352 -7680.8936 8675.6289 y
-7680.8936 8675.6074 -7680.9146 8675.5869 -7680.9351 8675.5869 c
-7681.0615 8675.5869 -7681.4414 8676.1338 -7681.5049 8676.1338 c
-7681.5264 8676.1338 -7681.5264 8676.1338 -7681.5264 8676.0928 c
-7681.2729 8675.1855 -7681.2729 8675.1016 v
-7681.2729 8674.9961 -7681.3154 8674.9541 -7681.3994 8674.9541 c
-7681.4634 8674.9541 -7681.6943 8675.291 -7681.7783 8675.291 c
-7681.8218 8675.291 -7681.8418 8675.25 -7681.8418 8675.1855 c
-7681.7783 8674.6377 L
f
1 D
-7686.0386 8673.9004 m
-7686.1016 8673.9414 -7686.1865 8673.9629 -7686.2495 8673.9629 c
-7686.5874 8673.9629 -7686.6714 8671.96 -7686.6714 8671.7695 c
-7686.6714 8671.707 -7686.6289 8671.666 -7686.5654 8671.666 c
-7685.4272 8671.666 -7683.5498 8673.627 -7683.5498 8674.0469 c
-7683.5498 8674.0898 -7683.5498 8674.1104 -7683.5928 8674.1104 c
-7683.6138 8674.1104 -7683.6553 8674.0898 -7683.6982 8674.0684 c
-7684.0986 8673.7949 -7684.5215 8673.6895 -7685.1104 8673.6895 c
-7685.4902 8673.6895 -7685.7007 8673.752 -7686.0386 8673.9004 c
f
-7684.3306 8677.8633 m
-7683.8882 8678.6855 -7682.8115 8678.6855 -7682.7271 8678.6855 c
-7682.5801 8678.6855 -7682.3906 8678.666 -7682.3906 8678.4961 c
-7682.3906 8678.3066 -7683.4238 8678.0537 -7683.4238 8677.8633 c
-7683.2129 8677.5273 -7683.2129 8677.4424 v
-7683.2129 8677.043 -7683.2129 8677 -7683.0225 8677 c
-7682.7915 8677 -7681.9897 8677.2949 -7681.7378 8678.0117 c
-7681.5474 8678.5391 -7680.5767 8680.2666 -7678.4258 8680.2666 c
-7677.5615 8680.2666 -7677.2446 8680.1201 -7677.0977 8680.1201 c
-7676.7817 8680.1201 -7674.8418 8682.166 -7674.8198 8682.334 c
-7674.7998 8682.4395 -7674.7998 8682.5664 -7674.7998 8682.6719 c
-7674.7998 8682.8828 -7674.7998 8683.2832 -7675.1782 8683.5361 c
-7675.3896 8683.6631 -7675.4951 8683.916 -7675.4951 8684.168 c
-7675.4951 8684.2744 -7675.4951 8684.6328 -7675.2207 8684.6328 c
-7674.9473 8684.6328 -7674.9058 8684.4854 -7674.9058 8684.1904 c
-7674.9058 8684.002 -7674.7358 8683.8945 -7674.5889 8683.8945 c
-7674.4399 8683.8945 -7673.8506 8684.1904 -7673.8506 8684.6113 c
-7673.8506 8684.8438 -7674.1455 8685.9189 -7675.4321 8685.9189 c
-7676.4014 8685.9189 -7676.4014 8685.793 -7676.4014 8684.3994 c
-7676.4014 8683.1357 -7676.3594 8682.7344 -7676.2119 8681.5967 c
-7676.1904 8681.5967 -7676.1904 8681.5752 y
-7676.1904 8681.4277 -7676.3174 8681.3643 -7676.4233 8681.3643 c
-7676.4438 8681.3643 -7676.4648 8681.3848 -7676.4863 8681.3848 c
-7676.6118 8681.4063 -7676.9072 8681.7227 -7677.8145 8681.7002 c
-7679.7119 8681.7002 -7683.9087 8680.1416 -7685.2793 8677.6533 c
-7685.8906 8676.5781 -7686.2705 8675.207 -7686.2705 8674.9541 c
-7686.2705 8674.4053 -7685.2578 8674.2373 -7685.0049 8674.2373 c
-7683.6553 8674.2373 -7682.2847 8675.9023 -7682.2847 8676.3457 c
-7682.2847 8676.3877 -7682.3271 8676.4297 -7682.3486 8676.4297 c
-7682.3906 8676.4297 -7682.4326 8676.4092 -7682.4961 8676.3672 c
-7682.6431 8676.2197 -7683.2334 8675.5654 -7683.8662 8675.5654 c
-7684.5625 8675.5654 -7684.5835 8676.0293 -7684.5835 8676.4512 c
-7684.5835 8676.8945 -7684.5415 8677.4629 -7684.3306 8677.8633 c
f
0 D
-7680.5352 8674.5527 m
-7680.5352 8674.7002 -7680.5352 8675.0176 -7680.2192 8675.0176 c
-7680.1553 8675.0176 -7680.0918 8674.9961 -7680.0278 8674.9121 c
-7679.9863 8674.8262 -7679.8608 8674.3848 -7679.7754 8674.3848 c
-7679.7334 8674.3848 -7679.7119 8674.4053 -7679.7119 8674.4688 c
-7679.7119 8674.7002 -7679.8174 8675.0801 -7679.8174 8675.3135 c
-7679.8174 8675.46 -7679.6694 8675.6289 -7679.5225 8675.6289 c
-7679.3115 8675.6289 -7679.1855 8675.207 -7679.1226 8674.9961 c
-7679.1006 8674.9326 -7679.0586 8674.9121 -7679.0386 8674.9121 c
-7679.0166 8674.9326 -7679.0166 8674.9541 V
-7679.0386 8675.4814 l
-7679.0386 8675.7129 -7679.0386 8675.9023 -7678.8271 8675.9023 c
-7678.6782 8675.9023 -7678.4897 8675.1016 -7678.3418 8675.1016 c
-7678.3198 8675.1016 -7678.2998 8675.123 -7678.2998 8675.1855 c
-7678.2998 8675.25 -7678.3623 8675.5869 -7678.3623 8675.6709 c
-7678.3623 8675.8613 -7678.3418 8676.2822 -7678.1104 8676.2822 c
-7678.0254 8676.2822 -7677.8774 8675.7969 -7677.7935 8675.7969 c
-7677.7729 8675.7969 -7677.7729 8675.8184 -7677.7729 8675.8613 c
-7677.7729 8675.9453 -7677.8994 8676.3037 -7677.8994 8676.3877 c
-7677.8994 8676.4922 -7677.7935 8676.5996 -7677.7095 8676.5996 c
-7677.5835 8676.5996 -7677.3506 8675.9863 -7677.3086 8675.9863 c
-7677.2666 8675.9863 -7677.2446 8676.0508 -7677.2446 8676.1143 c
-7677.2446 8676.2197 -7677.3926 8676.6406 -7677.3926 8676.7256 c
-7677.3926 8676.873 -7677.3286 8676.957 -7677.2666 8676.957 c
-7677.1826 8676.957 -7677.0342 8676.5566 -7676.9502 8676.5566 c
-7676.9072 8676.5566 -7676.8862 8676.6621 -7676.8862 8676.7256 c
-7677.0762 8677.4424 -7677.0762 8677.5898 v
-7677.0762 8677.7168 -7677.0342 8677.7578 -7676.9922 8677.7578 c
-7676.9072 8677.7578 -7676.7178 8677.2949 -7676.6338 8677.2949 c
-7676.5918 8677.2949 -7676.5703 8677.3584 -7676.5703 8677.4424 c
-7676.5703 8677.5898 -7676.7817 8678.1602 -7676.7817 8678.2637 c
-7676.7817 8678.4121 -7676.7817 8678.6016 -7676.6758 8678.6016 c
-7676.6338 8678.6016 -7676.4863 8678.3916 -7676.4438 8678.3916 c
-7676.4014 8678.3916 -7676.3809 8678.4336 -7676.3809 8678.4961 c
-7676.3809 8678.5596 -7676.5073 8678.8555 -7676.5073 8678.918 c
-7676.5073 8679.0449 -7673.9561 8681.7637 -7673.4287 8681.7637 c
-7672.9233 8681.7637 -7672.8594 8681.7637 -7672.7744 8681.9551 c
-7672.6904 8682.1865 -7672.5854 8682.4189 -7672.1426 8682.6924 c
-7671.0039 8683.3242 -7670.8774 8683.4102 -7670.8135 8683.7266 c
-7670.7295 8684.2109 -7670.7085 8684.2529 -7670.3926 8684.4639 c
-7670.2446 8684.5693 -7670.2026 8684.6748 -7670.2026 8684.8223 c
-7670.2026 8685.1807 -7670.2026 8685.2236 -7670.0127 8685.2236 c
-7669.7598 8685.2236 -7669.4214 8684.5488 -7669.4214 8684.1904 c
-7669.4214 8683.2412 -7669.8018 8683.1357 -7670.4126 8682.9658 c
-7670.5615 8682.9248 -7670.7085 8682.8184 -7670.7085 8682.7344 c
-7670.7085 8682.6924 -7670.6875 8682.6719 -7670.6455 8682.6504 c
-7669.7598 8682.1455 -7669.4214 8681.4492 -7669.4214 8680.8789 c
-7669.4214 8680.0781 -7670.7085 8676.3672 -7670.7085 8676.0293 c
-7670.7085 8675.5439 -7670.5615 8675.502 -7670.3711 8675.502 c
-7670.2241 8675.502 -7669.7178 8676.0293 -7669.5903 8676.0293 c
-7669.5073 8676.0293 -7669.4214 8675.9658 -7669.4214 8675.7969 c
-7669.4214 8675.5654 -7669.8657 8674.5322 -7670.8984 8674.5322 c
-7671.4878 8674.5322 -7671.8682 8675.0586 -7671.8682 8675.5215 c
-7671.8682 8676.4727 -7671.5518 8676.6465 -7671.1934 8677.2168 c
-7671.1294 8677.3438 -7671.0879 8677.4697 -7671.0879 8677.5762 c
-7671.0879 8677.8496 -7671.7202 8677.7705 -7672.0786 8677.7705 c
-7672.2256 8677.7705 -7672.3955 8677.7441 -7672.3955 8677.6377 c
-7672.3955 8673.0215 -7675.6426 8669.4717 -7679.5225 8668.7334 c
-7679.8394 8668.6689 -7679.9863 8668.5439 -7679.9863 8668.418 c
-7679.9863 8668.375 -7679.1006 8667.2578 -7677.6255 8667.2578 c
-7675.8535 8667.2578 -7674.7153 8668.7334 -7674.7153 8669.4922 c
-7674.7153 8669.5762 -7674.7568 8669.6406 -7674.8198 8669.6406 c
-7674.9058 8669.6406 -7675.8535 8668.6914 -7676.0854 8668.6914 c
-7676.2119 8668.6914 -7676.3174 8668.7969 -7676.3174 8668.9023 c
-7676.3174 8669.0293 -7676.2334 8669.1543 -7676.0439 8669.3018 c
-7675.9814 8669.3242 -7674.5454 8671.0117 -7674.2515 8671.3486 c
-7673.6401 8672.0654 -7672.8594 8672.8447 -7671.6362 8672.8447 c
-7670.4561 8672.8447 -7669.4214 8671.6445 -7669.4214 8670.8848 c
-7669.4214 8670.1055 -7669.8857 8669.4082 -7670.3711 8669.0078 c
-7671.8896 8667.7422 -7671.8896 8667.3633 -7671.8896 8667.1309 c
-7671.8896 8666.8145 -7671.6992 8666.6895 -7671.4878 8666.6895 c
-7671.1514 8666.6895 -7670.9824 8666.8359 -7670.9824 8667.5098 c
-7670.9824 8667.8477 -7670.6455 8668.1855 -7670.2026 8668.1855 c
-7669.7598 8668.1855 -7669.4434 8667.8066 -7669.4434 8667.1943 c
-7669.4434 8666.584 -7670.2871 8665.8447 -7671.4878 8665.8447 c
-7673.1338 8665.8447 -7673.6182 8667.0039 -7673.6182 8667.4893 c
-7673.6182 8667.8262 -7673.5127 8668.418 -7673.1958 8668.7754 c
-7672.8594 8669.1768 -7672.4595 8669.873 -7672.1846 8670.5898 c
-7671.9521 8671.2432 -7671.4258 8671.6016 -7671.0879 8671.6016 c
-7671.0239 8671.6016 -7671.0039 8671.5801 -7671.0039 8671.5381 c
-7671.0039 8671.4326 -7671.2144 8671.0527 -7671.2144 8670.9688 c
-7671.2144 8670.5898 -7671.1094 8670.3789 -7670.8984 8670.3789 c
-7670.3711 8670.3789 -7670.2656 8671.0313 -7670.2656 8671.2637 c
-7670.2656 8671.75 -7670.6245 8672.3389 -7671.6782 8672.3389 c
-7673.0063 8672.3389 -7674.1245 8670.5898 -7674.1245 8670.5264 c
-7674.1245 8670.5039 -7674.0825 8669.957 -7674.0825 8669.8506 c
-7674.0825 8667.9521 -7675.79 8666.6895 -7677.6255 8666.6895 c
-7679.1855 8666.6895 -7680.3447 8667.9121 -7680.5352 8668.2061 c
-7680.6401 8668.375 -7680.7666 8668.459 -7680.9146 8668.459 c
-7681.2729 8668.459 -7684.1191 8668.3975 -7684.1191 8667.9746 c
-7684.1191 8667.9326 -7683.9937 8667.4688 -7683.8242 8667.4688 c
-7683.7607 8667.4688 -7683.6982 8667.5098 -7683.6353 8667.5742 c
-7683.4438 8667.8066 -7683.0225 8667.9326 -7682.6431 8667.9326 c
-7682.0942 8667.9326 -7681.1895 8667.3418 -7681.1895 8666.6045 c
-7681.1895 8666.3086 -7681.5679 8665.8242 -7681.8838 8665.8242 c
-7682.1377 8665.8242 -7683.1914 8666.541 -7683.4238 8666.541 c
-7683.7402 8666.541 -7683.8662 8666.3926 -7684.1606 8666.0557 c
-7684.3306 8665.8662 -7684.4575 8665.8447 -7684.6465 8665.8447 c
-7684.8154 8665.8447 -7684.9634 8665.9502 -7684.9634 8666.0977 c
-7684.9634 8666.2656 -7684.6465 8666.584 -7684.6265 8666.8574 c
-7684.6265 8667.0039 -7684.6055 8667.2354 -7684.6055 8667.4258 c
-7684.6055 8667.6797 -7684.6265 8668.0381 -7684.8994 8668.0381 c
-7685.7217 8668.0381 -7687.7681 8666.752 -7688.6538 8666.1602 c
-7689.1592 8665.8242 -7689.2432 8665.8242 -7689.3066 8665.8242 c
-7689.4336 8665.8242 -7689.5176 8665.9082 -7689.5176 8666.0557 c
-7689.5176 8666.1816 -7687.0713 8668.334 -7684.8994 8669.0703 c
-7684.5835 8669.1768 -7684.6055 8669.3242 -7684.5625 8669.4922 c
-7684.1406 8671.2432 -7682.5166 8673.416 -7681.9263 8673.416 c
-7681.7783 8673.416 -7681.7158 8673.416 -7681.7158 8673.5215 c
-7681.7158 8673.7305 -7681.6104 8673.9629 -7681.4634 8673.9629 c
-7681.4209 8673.9629 -7681.2524 8673.7305 -7681.21 8673.7305 c
-7681.1255 8673.7305 -7681.0615 8674.1953 -7681.0415 8674.2783 c
-7680.9995 8674.3848 -7680.9146 8674.4688 -7680.8506 8674.4688 c
-7680.7666 8674.4688 -7680.5986 8674.1318 -7680.5352 8674.1318 c
-7680.5137 8674.1318 -7680.4927 8674.1514 -7680.4927 8674.1953 c
-7680.5352 8674.5527 L
f
1 D
-7681.9058 8670.041 m
-7682.0942 8670.4629 -7682.2002 8670.7158 -7682.2002 8671.0957 c
-7682.2002 8671.3486 -7681.7783 8672.5928 y
-7681.7783 8672.6563 -7681.7998 8672.6768 -7681.8633 8672.6768 c
-7682.2847 8672.6768 -7684.0352 8670.4414 -7684.0352 8669.5762 c
-7684.0352 8669.4717 -7683.9722 8669.4082 -7683.8662 8669.4082 c
-7683.8042 8669.4082 -7681.8633 8669.5977 -7681.8633 8669.8301 c
-7681.8633 8669.8936 -7681.8838 8669.957 -7681.9058 8670.041 c
f
-7673.8081 8681.0059 m
-7674.7568 8680.1201 -7675.6846 8679.2559 -7675.6846 8678.707 c
-7675.6846 8678.3701 -7675.6226 8677.9688 -7675.6226 8677.5479 c
-7675.6226 8676.0928 -7676.9722 8674.7637 -7677.8774 8674.3008 c
-7678.3623 8674.0469 -7678.8481 8673.4785 -7678.8481 8673.1191 c
-7678.8481 8673.0137 -7678.8057 8672.9512 -7678.7422 8672.9512 c
-7678.6582 8672.9512 -7678.5942 8672.9717 -7678.5103 8672.9717 c
-7678.4473 8672.9717 -7678.2158 8672.8447 -7678.1519 8672.8447 c
-7678.0049 8672.8447 -7677.6035 8673.5 -7677.4561 8673.5 c
-7677.2446 8673.5 -7677.1826 8673.2891 -7677.1826 8673.1406 c
-7677.1826 8672.7822 -7677.7305 8671.4326 -7678.9951 8671.4326 c
-7679.7554 8671.4326 -7680.0498 8671.875 -7680.0498 8672.2129 c
-7680.0498 8672.8447 -7679.5225 8673.457 -7679.3975 8673.627 c
-7679.3545 8673.668 -7679.3335 8673.71 -7679.3335 8673.752 c
-7679.3335 8673.7949 -7679.3545 8673.8145 -7679.4175 8673.8145 c
-7679.6694 8673.8145 -7681.6519 8672.7822 -7681.6519 8671.0527 c
-7681.6519 8670.6318 -7681.4209 8669.8301 -7680.7666 8669.8301 c
-7678.2998 8669.8301 -7674.1675 8673.6895 -7674.1675 8678.1377 c
-7674.1675 8678.5176 -7674.3984 8679.0664 -7674.4614 8679.4453 c
-7674.4834 8679.4668 -7674.4834 8679.5088 -7674.4834 8679.5498 c
-7674.4834 8679.6768 -7674.4399 8679.8457 -7674.3145 8679.8457 c
-7674.0615 8679.8457 -7672.3955 8679.6563 -7672.0366 8679.6563 c
-7670.3926 8679.6563 -7669.9702 8679.6563 -7669.9702 8680.752 c
-7669.9702 8681.9756 -7671.1094 8682.293 -7671.5098 8682.293 c
-7671.8896 8682.293 -7672.2695 8681.9961 -7672.2695 8681.6377 c
-7672.2695 8681.5322 -7672.0791 8681.0898 -7672.0791 8681.0059 c
-7672.0791 8680.8584 -7672.2065 8680.7744 -7672.3325 8680.7744 c
-7672.4795 8680.7744 -7672.9858 8681.2793 -7673.1338 8681.2793 c
-7673.3862 8681.2793 -7673.6401 8681.1533 -7673.8081 8681.0059 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 7)0 A
u
1 Ap
0 D
0 J 0 j 1 w 4 M []0 d0 XR
-7673 8691 m
-7691 8691 L
-7691 8673 L
-7673 8673 L
-7673 8691 L
n
u
0 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7673 8682 m
-7680.8379 8677.4746 L
-7680.8379 8680.5625 L
-7691 8680.5625 L
-7691 8683.4375 L
-7680.8379 8683.4375 L
-7680.8379 8686.5264 L
-7673 8682 L
f
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
-7677.2939 8680.3857 m
-7680.0879 8678.7744 L
-7680.0879 8681.3008 L
-7691 8681.3008 L
-7691 8682.7002 L
-7680.0879 8682.7002 L
-7680.0879 8685.2266 L
-7677.2939 8683.6133 L
-7674.5 8682 L
-7677.2939 8680.3857 L
f
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
-7679.1675 8681.0918 m
-7679.5586 8681.0918 -7679.8896 8681.3408 -7680.0176 8681.6865 C
-7691 8681.6865 L
-7691 8682.3125 L
-7680.0176 8682.3125 L
-7679.8896 8682.6602 -7679.5586 8682.9082 -7679.1675 8682.9082 c
-7678.6655 8682.9082 -7678.2588 8682.502 -7678.2588 8682 c
-7678.2588 8681.499 -7678.6655 8681.0918 -7679.1675 8681.0918 c
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -
(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -
( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -
(/ Adobe PatternOnPath Brush Tool/ Gothic/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Spoke)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gothic)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Red Arrow Brush)
(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -
(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -
(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(Black)
Pc
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
(CMYK Red)
Pc
0.037415 0.000031 0.938323 0.000031 1 0.945098 0 Xa
(CMYK Yellow)
Pc
0.830198 0.070466 0.955505 0.00293 0 0.647059 0.317647 Xa
(CMYK Green)
Pc
0.696681 0.145022 0.000031 0.000031 0 0.678431 0.933333 Xa
(CMYK Cyan)
Pc
0.9935 0.966247 0.040497 0.005554 0.180392 0.192157 0.568627 Xa
(CMYK Blue)
Pc
0.01062 0.992554 0.011963 0.000031 0.921569 0 0.545098 Xa
(CMYK Magenta)
Pc
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
(C=15 M=100 Y=90 K=10)
Pc
0.000671 0.901213 0.849546 0.000031 0.933333 0.25098 0.211765 Xa
(C=0 M=90 Y=85 K=0)
Pc
0.00116 0.798733 0.949126 0.000244 0.941176 0.352941 0.156863 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.003662 0.505333 0.989288 0.000031 0.964706 0.572549 0.117647 Xa
(C=0 M=50 Y=100 K=0)
Pc
0.003021 0.35346 0.847349 0.000031 0.980392 0.686275 0.25098 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.054444 0.003235 0.905974 0.000031 0.976471 0.92549 0.192157 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.20148 0.003815 0.989227 0.000031 0.839216 0.870588 0.137255 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.505791 0.004547 0.994018 0.000031 0.545098 0.772549 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.754574 0.006806 0.99881 0.000214 0.215686 0.701961 0.290196 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.86276 0.170748 1 0.035309 0 0.576471 0.270588 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.757656 0.005707 0.748348 0.000031 0.160784 0.705882 0.45098 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.790921 0.110048 0.453498 0.001251 0 0.65098 0.611765 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.705592 0.159396 0.000092 0.000031 0.14902 0.662745 0.878431 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.851041 0.499489 0.004303 0.000031 0.105882 0.458824 0.733333 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.99588 0.93521 0.066804 0.005341 0.168627 0.219608 0.560784 Xa
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.305394 0.220737 0.14902 0.133333 0.380392 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.751614 0.986633 0.016571 0.002991 0.396078 0.176471 0.564706 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.513085 0.995178 0.021149 0.001465 0.564706 0.152941 0.556863 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.097017 0.997467 0.483467 0.004913 0.85098 0.109804 0.360784 Xa
(C=10 M=100 Y=50 K=0)
Pc
0.005951 0.949981 0.201511 0.000031 0.92549 0.160784 0.482353 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.25568 0.249699 0.402838 0.000031 0.756863 0.705882 0.603922 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.395941 0.446571 0.488045 0.063233 0.603922 0.517647 0.47451 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.518273 0.513481 0.611536 0.231357 0.443137 0.396078 0.345098 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.543633 0.603143 0.645685 0.397101 0.352941 0.290196 0.258824 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.236454 0.395239 0.642084 0.015473 0.764706 0.6 0.419608 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.307591 0.494209 0.757412 0.096529 0.658824 0.486275 0.309804 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.360388 0.604211 0.80734 0.241825 0.541176 0.364706 0.231373 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.391821 0.642573 0.894743 0.355108 0.458824 0.298039 0.156863 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.51931 0.703029 0.790982 0.698695 0.231373 0.137255 0.078431 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient)
Pc
Bb
0 0 0 0 Bh
2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Soft Black Vignette)
Pc
Bb
2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Desert Sunset)
Pc
Bb
0 0 0 0 Bh
2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper Radial)
Pc
(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Fish Pattern)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.679255 0.611627 0.588037 0.462501 0.25098 0.25098 0.254902 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.581781 0.492103 0.470741 0.1514 0.427451 0.431373 0.439216 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.521477 0.431769 0.410437 0.065675 0.501961 0.505882 0.517647 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.454841 0.363958 0.351537 0.014527 0.572549 0.580392 0.592157 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.367559 0.287694 0.276036 0.000031 0.65098 0.658824 0.670588 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.268681 0.203189 0.199283 0.000031 0.733333 0.741176 0.74902 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.174166 0.123781 0.126894 0.000031 0.815686 0.823529 0.827451 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.08426 0.057374 0.057435 0.000031 0.901961 0.905882 0.909804 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.039734 0.02884 0.023896 0.000031 0.945098 0.945098 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.005646 0.744991 0.988983 0.000427 0.945098 0.396078 0.133333 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.016846 0.093446 0.972717 0.000031 1 0.866667 0.082353 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.994598 0.874296 0.035157 0.001648 0.133333 0.25098 0.6 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.594995 0.897002 0.007355 0.000244 0.498039 0.247059 0.592157 Xa
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
*u
1 D
0 O
0 J 0 j 1 w 4 M []0 d0 XR
0 g
665.333 707.3335 m
643.3613 710.874 650.916 655.666 636.916 640.999 C
637.249 648.3325 650.501 691.5854 649.916 704.666 C
643.293 694.6772 640.041 661.8677 635.583 653.3325 C
635.4141 670.4976 633.1455 706.562 625.916 716.666 C
629.25 703.6665 632.6016 690.6851 631.916 673.666 C
631.3301 676.2041 633.1836 637.5835 624.916 636.666 C
619.4619 640.8784 613.3184 665.4019 612.916 674.666 C
616.7432 672.8262 616.3184 666.7354 618.916 663.666 C
621.9082 685.3115 614.7705 710.1372 598.916 707.666 c
589.0293 706.125 587.5996 688.0825 589.916 674.666 C
576.6309 688.5405 565.4063 718.8091 573.916 744.666 C
573.3809 730.4648 583.8379 727.2549 585.916 715.666 C
593.6777 733.3203 574.0234 768.4648 568.916 741.666 c
563.4824 713.1616 583.2188 673.4683 592.916 658.666 C
591.9121 658.6626 591.7266 659.4761 590.916 659.666 C
556.375 663.2661 524.1836 661.665 500.916 680.666 c
480.7437 697.1396 461.3286 721.7983 459.916 751.666 c
459.667 756.9263 458.6821 763.0132 462.916 765.666 C
465.1758 744.5928 490.5127 746.5962 496.916 729.666 C
496.1055 741.189 499.9995 753.6045 492.916 762.666 c
486.5962 770.7505 479.0303 780.4272 465.916 777.666 c
457.6318 775.9219 455.6587 761.4258 456.916 750.666 c
459.8516 725.541 476.6265 700.1016 493.916 681.666 c
513.1963 661.1074 538.4092 649.0337 564.916 646.666 C
547.9863 644.2627 538.043 634.8726 523.916 629.666 C
519.6777 639.0015 516.4121 646.8032 508.916 655.666 c
503.9502 661.5371 493.0649 674.0581 481.916 670.666 c
462.8037 664.8506 474.7495 610.9082 482.916 603.666 C
479.5732 602.0088 476.2588 600.3232 472.916 598.666 C
459.0459 620.1914 452.5649 647.0938 449.916 677.666 c
448.9873 688.3862 443.9087 695.9731 442.916 705.666 c
441.6226 718.2939 445.5146 730.9585 440.916 742.666 C
434.8877 686.417 447.3467 631.9258 468.916 596.666 C
463.0522 596.7773 458.2026 593.1113 452.916 595.666 C
434.1846 620.2681 420.9727 650.3892 414.916 687.666 C
407.9678 696.6865 399.394 707.7041 396.916 721.666 c
388.5894 768.5791 383.3477 830.7412 392.916 878.666 C
380.5391 838.8174 380.6875 791.6074 387.916 750.666 c
389.8945 739.46 390.8232 727.7139 392.916 718.666 c
395.8613 705.9307 406.9746 697.002 410.916 686.666 c
414.1001 678.3164 413.7349 668.9102 415.916 660.666 c
422.6548 635.1958 433.8677 616.001 444.916 597.666 C
410.7573 611.5068 389.811 638.5615 381.916 678.666 C
388.688 674.8486 391.9604 683.1362 397.916 682.666 c
404.5845 682.1396 406.3862 674.916 411.916 670.666 C
408.6719 681.4531 404.0762 693.0234 398.916 702.666 c
393.9697 711.9087 385.5049 733.2241 375.916 725.666 c
368.4121 719.7515 370.1006 704.8867 375.0967 687.5713 C
374.8433 690.0767 394.9839 633.252 397.916 623.666 C
383.1523 642.2388 367.5928 664.2109 368.916 695.666 C
368.5078 691.4072 368.4541 686.7949 366.916 683.666 C
353.439 750.4204 366.7837 822.9395 387.916 872.666 C
368.8423 847.4067 364.9038 807.0112 359.916 767.666 C
353.875 793.75 343.625 842.375 333.625 800.125 C
334.5356 800.6973 341.5156 804.75 343.75 803.375 C
353.6211 797.3003 359.75 765.75 Y
357.3403 729.4985 356.916 722.666 v
355.0195 692.1396 361.8066 670.1514 366.916 647.666 c
370.3433 632.584 371.8804 621.4463 376.916 609.666 c
386.4736 587.3076 401.8838 569.1104 418.916 554.666 c
427.0522 547.7656 437.7656 543.1035 443.916 532.666 C
435.5508 539.3008 427.9326 546.6826 418.916 552.666 C
444.3853 529.4424 469.5337 475.6719 484.666 441.998 c
486.791 437.2695 478.8535 477.4355 486.166 470.248 c
492.7681 463.7598 495.6362 457.6113 498.916 466.666 C
501.6934 454.1094 499.1782 406.5117 505 397 C
514.2578 402.0762 514.9814 451.2676 520.916 459.666 C
514.0811 399.1445 515.4082 335.084 505.916 278.666 C
498.6392 327.0547 495.4497 379.5332 486.916 426.666 C
489.1309 402.4473 493.7866 376.3633 495.916 349.666 c
498.0049 323.4707 503.6445 297.4434 504.916 272.666 c
506.3555 244.6016 498.2402 203.8711 479.916 197.666 c
470.9648 194.6328 458.6763 196.25 448.916 194.666 c
435.1284 192.4258 422.1914 188.3613 413.916 184.666 c
411.8994 183.7656 407.9331 184.2441 406.916 183.666 c
400.7334 180.1543 399.3394 172.7031 391.916 168.666 C
396.6865 168.7695 395.8423 163.2578 397.916 160.666 c
401.022 156.5879 409.1284 155.5664 406.916 151.666 C
410.689 148.7715 417.0405 148.457 419.916 144.666 C
474.2036 132.0664 588.167 123 617.916 157.666 c
620.5586 160.7461 620.541 164.373 620.916 168.666 C
609.1914 188.7246 568.6738 196.0957 531.916 197.666 C
513.4609 212.1133 504.9951 241.1934 506.916 273.666 c
509.7578 321.707 521.127 378.6465 526.916 427.666 c
529.0508 445.7383 530.8867 463.1836 537.916 475.666 c
547.2109 492.168 560.4395 504.6748 569.916 517.666 c
580.1738 531.7266 592.2168 542.1621 602.335 554.0913 c
633.4355 590.7583 647.998 648.9697 656.833 698.5 C
657.46 695.4604 657.9697 680.7192 660.25 679.3325 C
661.7441 688.5049 675.7764 705.6504 665.333 707.3335 c
f
0 D
0 g
358.916 726.666 m
360.1943 701.6108 367.3262 682.4097 366.916 655.666 C
359.4268 674.1631 356.6343 701.6094 358.916 726.666 C
f
0 g
493.916 198.666 m
494.6211 203.293 497.2109 206.0371 497.916 210.666 C
499.3862 207.8223 497.0107 200.2676 493.916 198.666 C
f
0 g
524.916 151.666 m
530.3906 152.3145 520.3662 149.5547 520.916 149.666 c
513.6064 148.1953 506.0684 148.6367 498.916 151.666 C
504.7031 151.373 517.0732 150.7363 524.916 151.666 c
f
0 g
504.916 153.666 m
513.4414 157.2246 527.8037 178.8398 534.916 159.666 C
530.1836 152.8438 515.7266 151.1582 504.916 153.666 C
f
0 g
494.916 176.666 m
495.3857 170.5781 489.6021 157.832 498.916 154.666 C
488.2798 153.4355 489.5439 169.7715 494.916 176.666 C
f
0 g
483.916 152.666 m
482.0234 150.8906 477.311 151.9375 473.916 151.666 C
481.166 164.082 489.4521 175.4629 493.916 190.666 C
496.9048 179.457 480.0786 168.3906 483.916 152.666 C
f
0 g
487.916 163.666 m
489.5117 159.9277 489.8447 154.9277 493.916 153.666 C
489.7813 151.418 485.1006 158.4316 487.916 163.666 C
f
0 g
493.916 204.666 m
495.0522 206.6387 492.4385 196.5488 487.916 197.666 C
489.5669 200.3477 492.1558 202.0918 493.916 204.666 C
f
0 g
489.916 192.666 m
490.7549 193.6934 491.3213 195.3613 493.916 194.666 C
493.0435 193.2051 493.1216 190.793 489.916 191.666 C
490.5659 190.6484 492.2153 190.6309 491.916 188.666 C
485.0557 175.8594 478.4155 162.832 469.916 151.666 C
467.5601 151.6426 466.9717 153.3887 463.916 152.666 C
473.7861 164.8965 479.9604 180.4766 489.916 192.666 c
f
0 g
468.916 150.666 m
468.6758 149.2207 460.686 148.3418 461.916 151.666 C
465.3848 152.4668 465.7598 150.1758 468.916 150.666 C
f
0 g
480.916 191.666 m
479.8545 188.3711 481.811 191.2148 486.916 191.666 C
478.9575 178.291 470.4253 165.4902 460.916 153.666 C
453.4917 154.5742 447.1777 156.5938 443.916 161.666 C
452.2764 169.3047 464.2422 173.3398 471.916 181.666 C
460.3032 178.4844 446.7124 156.9941 429.916 167.666 C
448.5967 173.9844 465.7881 181.793 480.916 191.666 C
f
0 g
422.916 168.666 m
423.3359 173.2461 428.1328 173.4492 429.916 176.666 C
429.6177 175.918 428.4009 167.5488 422.916 168.666 C
f
0 g
466.916 186.666 m
460.8296 178.748 442.3765 174.541 429.916 169.666 C
430.0815 183.5039 458.6558 177.5898 466.916 186.666 C
f
0 g
440.916 163.666 m
436.5479 159.918 427.7188 163.8008 423.916 166.666 C
429.895 169.9512 432.8286 161.5996 440.916 163.666 C
f
0 g
439.916 161.666 m
446.3706 158.4531 450.0386 152.4551 459.916 152.666 C
454.311 148.5215 437.9966 155.0156 439.916 161.666 C
f
0 g
471.916 192.666 m
469.4307 189.6621 462.3218 188.7617 457.916 190.666 C
461.6963 192.2188 466.6318 192.6172 471.916 192.666 C
f
0 g
454.916 190.666 m
449.8408 185.3438 443.7451 184.3691 433.916 185.666 C
439.5151 188.7324 447.4707 189.4434 454.916 190.666 C
f
0 g
440.916 183.666 m
440.3223 182.666 427.9497 180.3027 423.916 182.666 C
427.9917 186.8164 434.313 182.7871 440.916 183.666 C
f
0 g
432.916 180.666 m
430.2935 176.9551 421.5713 179.3438 415.916 178.666 C
418.1333 182.7813 427.5264 179.7227 432.916 180.666 C
f
0 g
425.916 177.666 m
418.6255 173.623 416.5674 164.3477 403.916 165.666 C
402.1875 174.8516 414.625 178.1973 425.916 177.666 C
f
0 g
417.916 167.666 m
418.5718 170.3438 420.7803 171.4688 421.916 173.666 C
422.8872 173.2715 422.3965 165.918 417.916 167.666 C
f
0 g
403.916 164.666 m
417.8369 167.8633 423.3096 164.3516 434.916 161.666 C
430.833 157.082 422.7046 156.543 416.916 153.666 C
417.9204 152.3359 417.8618 149.9453 419.916 149.666 C
413.2871 149.3828 406.9995 158.0742 403.916 164.666 C
f
0 g
448.916 142.666 m
438.8096 142.8926 431.7427 146.1582 422.916 147.666 C
423.0854 150.168 421.3799 150.7969 419.916 151.666 C
424.5552 155.6934 431.8457 157.0703 437.916 159.666 C
439.8887 153.6387 445.9019 151.6504 452.916 150.666 C
452.6064 149.3086 450.4121 149.8359 448.916 149.666 C
449.7632 148.1797 452.1357 148.2188 453.916 147.666 C
448.8398 146.4844 450.5645 140.3887 448.916 142.666 C
f
0 g
462.916 140.666 m
458.6914 140.4414 456.4575 142.207 452.916 142.666 C
454.5947 148.8691 458.8311 146.3926 465.916 146.666 C
465.3584 144.2227 462.0469 144.5352 462.916 140.666 C
f
0 g
480.916 139.666 m
477.5479 137.6719 471.186 141.2383 466.916 141.666 C
466.9287 143.6523 469.6445 142.9375 468.916 145.666 C
473.2661 145.6484 477.9136 145.334 480.916 146.666 C
482.3164 143.3965 475.939 140.2012 480.916 139.666 C
f
0 g
472.916 149.666 m
474.3022 151.9453 479.8765 150.0391 482.916 150.666 C
481.5293 148.3848 475.9556 150.293 472.916 149.666 C
f
0 g
513.916 135.666 m
515.3027 137.9453 520.877 136.0391 523.916 136.666 C
522.5293 134.3848 516.9551 136.293 513.916 135.666 C
f
0 g
483.916 139.666 m
484.2349 142.0137 485.4956 143.4199 484.916 146.666 C
504.1133 152.0605 523.5645 142.8242 544.916 141.666 C
541.0234 143.7734 533.1895 141.9395 529.916 144.666 C
532.8955 146.6855 539.5059 145.0762 541.916 147.666 C
534.707 154.0254 528.0469 143.9082 517.916 146.666 C
525.5156 151.0293 537.6338 150 537.916 159.666 c
538.0957 165.7988 533.126 168.9746 528.916 169.666 c
515.0889 171.9316 512.8711 155.7559 502.916 154.666 C
493.6484 156.3516 492.8525 171.8125 499.916 176.666 C
503.6445 173.7285 504.7871 168.2031 505.916 162.666 C
508.2305 170.9922 503.8652 181.2715 504.916 191.666 C
516.916 191.666 L
528.4902 173.0039 545.9961 151.7188 573.916 151.666 c
581.1768 151.6523 589.9473 155.6016 593.916 153.666 C
596.832 151.627 589.2754 150.166 584.916 148.666 c
559.9688 140.0801 519.9473 136.4004 483.916 139.666 C
f
0 g
530.916 146.666 m
532.0215 149.2266 536.2852 148.6289 539.916 148.666 C
537.8281 147.0859 534.6563 146.5918 530.916 146.666 C
f
0 g
506.916 195.666 m
508.6123 198.8164 511.5664 196.9102 514.916 196.666 C
514.1719 194.4102 509.3066 196.2754 506.916 195.666 C
f
0 g
533.916 180.666 m
537.4658 177.2148 537.8223 170.5723 541.916 167.666 C
538.1016 166.877 535.5801 175.9766 533.916 180.666 C
f
0 g
546.916 160.666 m
556.5605 156.6973 582.9883 151.625 592.916 158.666 C
582.0156 150.2188 556.2744 153.0938 546.916 160.666 C
f
0 g
527.916 136.666 m
523.5518 136.6426 527.7471 138.3887 529.916 137.666 C
536.916 137.666 L
557.918 139.998 578.0264 143.2227 593.916 150.666 C
595.1465 150.2285 595.9697 149.3867 595.916 147.666 C
575.5703 141.6777 554.5449 136.3711 527.916 136.666 c
f
0 g
606.5 164.25 m
602.6533 165.0684 581.9473 172.0293 581.5 176.25 C
583.8477 176.5684 603.6699 171.2461 606.916 170.666 C
607.4922 168.5742 606.9785 167.3945 606.5 164.25 C
f
0 g
616.875 169.75 m
616.7129 168.5879 618 165.5 616.875 162 C
608.125 163.75 L
608.625 165.25 609.75 168.375 609 170 C
610.3848 170.9785 615.3633 169.9863 616.875 169.75 C
f
0 g
608.5 178 m
601.667 179.667 557.8652 192.8457 551.334 192.5 C
555.9492 196.0664 598.834 186 608.5 178 C
f
0 g
567.916 177.666 m
564.666 178.416 561.7266 179.4766 558.916 180.666 C
556.6934 182.5762 569.7773 178.5996 567.916 177.666 C
f
0 g
574.916 174.666 m
558.7734 172.5273 546.0215 182.4355 535.916 189.666 C
540.9199 190.0586 558.8242 175.7285 574.916 174.666 C
f
0 g
578.916 169.666 m
563.375 145.7715 534.4043 171.2715 530.916 189.666 C
543.6006 183.6816 558.0596 170.8105 578.916 169.666 C
f
0 g
527.916 191.666 m
530.1797 184.9297 532.2334 177.9824 535.916 172.666 C
528.8545 173.2793 524.1465 184.8887 518.916 190.666 C
519.9805 192.9355 525.2021 191.0469 527.916 191.666 C
f
0 g
515.916 204.666 m
518.8018 204.2188 518.2803 200.3633 520.916 199.666 C
517.0391 195.8906 511.4678 202.4883 515.916 204.666 C
f
0 g
507.916 199.666 m
504.8965 201.791 510.7793 203.3887 510.916 205.666 C
513.9355 203.5391 508.0527 201.9414 507.916 199.666 C
f
0 g
507.916 209.666 m
508.7666 209.8496 508.8594 209.2754 508.916 208.666 C
510.916 208.666 L
509.4121 205.8359 506.5098 204.4063 505.916 200.666 C
503.5869 202.7383 508.3154 206.209 507.916 209.666 C
f
0 g
613.916 622.666 m
606.9824 625.3989 606.4902 634.5728 601.916 639.666 C
602.8574 642.3911 606.9609 641.9546 609.916 642.666 C
608.8037 640.4453 605.959 639.957 604.916 637.666 C
609.7754 634.5249 614.7695 631.519 613.916 622.666 C
f
0 g
593.916 694.666 m
598.2344 687.3169 600.8828 678.2988 610.916 676.666 C
610.1895 667.9395 612.1777 661.9282 612.916 654.666 C
600.6572 661.2715 585.4951 673.8389 593.916 694.666 C
f
0 g
532.916 607.666 m
526.7168 601.1577 510.3574 587.5889 502.916 575.666 C
499.686 579.1025 496.3589 582.4419 494.916 587.666 C
510.6777 591.2383 521.8203 599.4277 532.916 607.666 C
f
0 g
543.916 505.666 m
549.3154 499.7168 537.5625 495.084 535.916 489.666 C
535.4629 494.1387 542.0889 500.1455 543.916 505.666 C
f
0 g
537.916 511.666 m
538.7207 511.1367 539.5391 510.623 540.916 510.666 C
540.4688 507.7803 536.6133 508.3018 535.916 505.666 C
533.1074 507.2686 538.084 509.4033 537.916 511.666 C
f
0 g
541.916 512.666 m
541.208 522.1426 551.4111 529.0957 554.916 537.666 C
562.916 537.666 L
556.332 528.916 550.0215 519.8936 541.916 512.666 C
f
0 g
535.916 516.666 m
538.5195 521.0625 516.3037 525.043 505.916 521.666 C
498.4414 525.8037 506.0576 535.291 505.916 543.666 C
511.2598 542.6758 514.2051 539.2881 519.916 538.666 C
516.2656 541.6816 511.127 543.21 506.916 545.666 C
507.7139 547.5352 508.5869 549.3281 508.916 551.666 C
516.9648 544.0479 528.0723 539.4893 538.916 534.666 C
530.8945 542.6445 516.8906 544.6406 509.916 553.666 C
509.752 556.8301 512.5742 557.0078 511.916 560.666 C
522.6563 550.4063 534.668 541.418 551.916 537.666 C
546.4648 530.7842 543.0332 521.8828 535.916 516.666 C
f
0 g
506.916 557.666 m
501.5352 560.6221 500.0259 564.2764 504.916 568.666 C
506.3018 567.0518 507.75 565.5 508.916 563.666 C
509.1768 560.7383 506.6553 560.5938 506.916 557.666 C
f
0 g
504.916 553.666 m
495.916 553.666 L
495.9321 556.6504 498.5161 557.0664 498.916 559.666 C
500.9136 557.6641 503.9951 556.7451 504.916 553.666 C
f
0 g
497.916 568.666 m
491.6909 572.4414 487.5786 578.3286 483.916 584.666 C
485.7021 585.8799 489.7334 584.8486 490.916 586.666 C
495.25 583 498.2051 577.9551 500.916 572.666 C
498.8618 572.3867 498.9204 569.9951 497.916 568.666 C
f
0 g
504.916 552.666 m
504.0762 551.5049 503.5977 549.9854 503.916 547.666 C
500.1499 547.9004 499.6821 551.4316 495.916 551.666 C
496.98 553.9355 502.2021 552.0469 504.916 552.666 C
f
0 g
502.916 545.666 m
502.0732 540.5088 499.7764 536.8057 499.916 530.666 C
495.0391 532.1221 493.519 536.9355 488.916 538.666 C
490.896 542.3525 492.1802 546.7354 493.916 550.666 C
497.1328 549.2168 499.5205 546.9375 502.916 545.666 C
f
0 g
500.916 517.666 m
506.1289 519.7607 507.2578 515.6455 508.916 511.666 C
504.7979 510.8809 503.7842 513.2012 499.916 512.666 C
499.5068 515.0752 501.7422 514.8398 500.916 517.666 C
f
0 g
510.916 510.666 m
510.8721 508.9561 511.6592 508.0762 512.916 507.666 C
509.1768 505.3008 504.1855 510.2383 499.916 510.666 C
501.8809 512.8867 506.5479 509.3555 510.916 510.666 C
f
0 g
520.916 499.666 m
526.5918 499.9902 526.8857 505.6963 530.916 507.666 C
528.416 497.0215 503.8945 490.6465 498.916 505.666 C
504.2559 501.6719 514.5293 502.6133 520.916 499.666 C
f
0 g
514.916 506.666 m
515.6611 509.7441 512.1709 508.5879 512.916 511.666 C
530.916 511.666 L
528.1963 507.3857 522.1104 506.4717 514.916 506.666 C
f
0 g
510.916 512.666 m
510.9189 516.002 507.6631 516.0801 507.916 519.666 C
518.582 520.3311 525.6641 517.4141 532.916 514.666 C
528.6055 510.9756 518.25 513.332 510.916 512.666 C
f
0 g
510.916 566.666 m
501.8965 574.6699 519.6875 585.1494 523.916 592.666 C
522.5234 588.9629 513.0146 576.3047 510.916 566.666 C
f
0 g
477.916 644.666 m
482.5137 629.7114 489.4165 615.9434 511.916 621.666 C
503.3281 615.9214 495.0518 609.8638 484.916 605.666 C
481.2842 617.2993 476.0034 630.5796 477.916 644.666 C
f
0 g
477.916 584.666 m
483.0278 577.4443 488.0957 570.1787 494.916 564.666 C
493.3208 561.9277 491.1836 559.7324 489.916 556.666 C
478.5166 564.5996 469.3501 574.7666 459.916 584.666 C
463.2114 585.9287 471.7202 583.8281 477.916 584.666 C
f
0 g
394.916 635.666 m
409.6157 617.6982 427.3398 594.0908 455.916 586.666 C
465.4126 575.1621 475.2656 564.0156 487.916 555.666 C
487.6128 550.6357 484.7026 548.2129 483.916 543.666 C
472.2114 550.3916 459.5615 561.1807 441.916 558.666 C
433.6035 568.0195 426.5156 578.5991 418.916 588.666 C
423.9912 590.3848 429.3496 583.7832 435.916 583.666 C
426.3018 590.0518 412.2144 591.9644 409.916 605.666 C
422.1606 595.2441 437.8579 588.2744 452.916 580.666 C
434.04 595.4575 402.9316 606.6807 394.916 635.666 C
f
0 g
476.916 527.666 m
473.9321 527.6816 473.5161 530.2656 470.916 530.666 C
470.6709 534.9111 473.5317 536.0508 472.916 540.666 C
468.6011 540.6475 469.231 535.6846 464.916 535.666 C
462.1504 539.9004 457.4595 542.209 453.916 545.666 C
463.4653 553.9502 474.0825 545.9746 481.916 541.666 C
481.4731 535.7754 477.4985 533.417 476.916 527.666 C
f
0 g
489.916 508.666 m
486.4116 510.8281 482.2861 512.3691 481.916 517.666 C
485.0425 515.04 492.1313 513.6133 489.916 508.666 C
f
0 g
473.916 522.666 m
471.0967 523.7041 465.7715 525.791 467.916 528.666 C
470.7573 527.5078 473.8525 526.6025 473.916 522.666 C
f
0 g
445.916 553.666 m
452.373 557.0977 459.0903 552.1924 464.916 551.666 C
463.1299 548.4521 456.2588 550.3232 453.916 547.666 C
449.7036 548.1201 449.312 552.3955 445.916 553.666 C
f
0 g
367.916 669.666 m
376.9668 640.0498 397.0981 621.5146 411.916 597.666 C
396.1357 603.7246 378.7783 625.627 369.916 644.666 c
367.4751 649.9102 367.7881 660.5752 367.916 669.666 C
f
0 g
439.916 544.666 m
407.0229 563.7734 375.5317 592.9473 368.916 641.666 C
381.4482 622.8647 392.6567 602.7402 413.916 592.666 C
422.0371 580.4536 430.0229 568.1064 439.916 557.666 C
437.6421 554.3662 437.2397 547.9004 439.916 544.666 C
f
0 g
442.916 552.666 m
446.1489 551.8984 448.1489 549.8984 448.916 546.666 C
446.6934 545.8887 445.0166 544.5654 441.916 544.666 C
441.4785 548.1035 442.311 550.2705 442.916 552.666 C
f
0 g
442.916 541.666 m
448.9302 550.6465 460.7354 538.8926 460.916 533.666 C
453.666 535.083 447.4897 537.5732 442.916 541.666 C
f
0 g
446.916 532.666 m
451.4443 529.1846 466 527.0908 470.916 520.666 C
461.4346 515.709 451.625 526.3291 446.916 532.666 C
f
0 g
470.4995 483.666 m
465.333 491.166 467.3721 503.4551 457.916 514.666 C
461.4834 514.2139 466.7334 506.8311 472.916 505.666 C
476.6948 505.5537 478.293 507.623 478.916 510.666 C
490.9072 506.6572 496.833 479.248 496.9995 477.666 C
497.166 463.998 474.7305 477.5234 470.4995 483.666 c
f
0 g
495.916 503.666 m
494.1631 504.5801 492.4419 505.5254 492.916 508.666 C
495.0059 509.0898 495.564 507.9805 496.916 507.666 C
496.1392 506.7764 495.8408 505.4082 495.916 503.666 C
f
0 g
494.916 488.666 m
494.2104 491.959 493.3091 495.0586 492.916 498.666 C
494.2295 498.3125 494.4888 496.9043 495.916 496.666 C
496.1416 493.832 495.8994 480.9746 494.916 488.666 C
f
0 g
492.916 515.666 m
489.3491 516.7656 487.8364 519.9199 483.916 520.666 C
484.4321 526.4834 486.7583 530.4902 487.916 535.666 C
492.4346 533.5176 494.9727 529.3896 498.916 526.666 C
498.311 524.2715 497.4785 522.1035 497.916 518.666 C
495.5835 518.332 493.6074 517.6406 492.916 515.666 C
f
0 g
519.916 463.666 m
516.0742 449.5684 510.333 408.332 506.999 406.666 c
502.7305 404.5332 503.5332 448.9434 501.416 462.916 c
500.5078 468.9141 496.4766 483.4785 498.916 493.666 C
510.2822 482.4492 527.0508 489.1992 533.916 499.666 C
531.4277 489.4824 523.1816 475.6484 519.916 463.666 c
f
0 g
518.916 390.666 m
520.627 423.2891 518.9932 467.9199 536.916 487.666 C
525.1963 465.0508 522.6895 424.5605 518.916 390.666 C
f
0 g
528.916 451.666 m
527.9629 469.9551 539.8691 484.043 545.916 498.666 C
544.1924 483.0527 529.8555 471.3945 528.916 451.666 C
f
0 g
548.916 505.666 m
543.418 508.4785 551.2266 510.8779 551.916 513.666 C
554.084 511.7539 548.4043 509.2344 548.916 505.666 C
f
0 g
557.916 506.666 m
557.707 507.7334 565.1533 517.9541 568.916 521.666 C
567.8779 518.0205 561.625 510.9697 557.916 506.666 C
f
0 g
555.916 519.666 m
556.9072 525.0205 564.8809 532.0254 568.916 537.666 C
568.9082 535.1973 560.9053 523.7822 555.916 519.666 C
f
0 g
571.916 532.666 m
567.0566 526.2373 569.9746 534.4473 574.916 539.666 C
574.8906 538.1191 572.998 534.0986 571.916 532.666 c
f
0 g
579.916 537.666 m
577.625 542.9824 587.5352 544.6943 589.916 548.666 C
590.6992 544.8574 581.7852 542.1484 579.916 537.666 C
f
0 g
586.916 571.666 m
585.5723 569.3311 589.5078 568.9727 590.6289 569.957 C
590.7295 570.1953 590.8369 570.4346 590.916 570.666 C
590.9678 570.3809 590.8447 570.1465 590.6289 569.957 C
588.2422 564.3281 580.0156 557.1289 575.916 550.666 C
554.1016 539.4102 526.2715 549.667 513.916 562.666 C
529.8047 597.1104 553.0977 624.1509 584.916 642.666 C
560.4922 623.4224 543.0645 588.5181 529.916 554.666 C
545.3184 587.7158 573.084 618.6694 588.916 644.666 C
591.3477 639.8809 578.1289 624.8774 581.916 613.666 c
584.1113 607.165 592.9072 605.6006 599.916 610.666 C
598.1973 613.2783 597.584 610.459 592 609.125 C
578.209 606.959 587.6113 639.2563 600.916 639.666 C
602.7012 628.8901 611.5449 622.2397 611.916 611.666 c
612.5137 594.6611 596.9883 580.8228 586.916 571.666 C
f
0 g
621.75 594 m
619.582 593.8315 618.9219 603.4219 618.375 604.875 C
615.1191 590.4639 610.0996 578.1499 601.916 568.666 C
603.5664 581.3535 609.8877 597.9424 616.5 609 C
620.9375 607.7988 623.123 603.8662 627.75 605.375 C
626.9082 600.8838 623.0361 598.0469 621.75 594 C
f
0 g
628.916 612.666 m
623.8594 615.9316 624.582 624.9463 628.333 622.3335 C
629.1719 623.4941 632.9863 623.6812 632.667 626 C
636.124 623.2725 634.5498 612.8979 628.916 612.666 C
f
630.5 628.3335 m
633.7549 634.7456 639.6396 636.0269 641 644.3335 C
641.5488 638.104 640.2012 627.6431 630.5 628.3335 C
Bb
1 (Unnamed gradient 9) 333.625 506.0381 0 335.543 1 0 0 1 0 0 Bg
335.543 0 0 -759.666 333.625 880.666 Xm
8027.6255 0 0 -759.666 -7694.0005 880.666 Bc
335.543 0 0 -759.666 333.625 880.666 Bm
8027.6255 0 0 -759.666 669.168 880.666 Bc
f
0 BB
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
